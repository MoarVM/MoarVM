CC   = @cc@
LD   = @ld@
AR   = @ar@
MAKE = @make@ @mkflags@
RM   = @rm@
CAT  = @cat@

TRACING = 0
NOISY = 0

MSG = @:
CMD =
NOOUT =
NOERR =

@mknoisy@

CFLAGS    = @cflags@ @ccdef@MVM_TRACING=$(TRACING)
CINCLUDES = @ccinc@3rdparty/apr/include \
            @ccinc@3rdparty/libuv/include \
            @ccinc@3rdparty/libuv/src \
            @ccinc@3rdparty/libatomic_ops/src \
            @ccinc@3rdparty/libtommath \
            @ccinc@3rdparty/sha1 \
            @ccinc@3rdparty/linenoise \
            @ccinc@3rdparty \
            @ccinc@src
LDFLAGS   = @ldflags@
LDLIBS    = @ldlibs@
MAIN_LIBS = @mainlibs@
DLL_LIBS  = @thirdpartylibs@ $(LDLIBS)
ARFLAGS   = @arflags@

PLATFORM_WIN32 = src/platform/win32/mmap@obj@ \
                 src/platform/win32/time@obj@

PLATFORM_POSIX = src/platform/posix/mmap@obj@ \
                 src/platform/posix/time@obj@

MAIN_OBJECTS = src/main@obj@

OBJECTS = src/core/args@obj@ \
          src/core/exceptions@obj@ \
          src/core/interp@obj@ \
          src/core/threadcontext@obj@ \
          src/core/compunit@obj@ \
          src/core/bytecode@obj@ \
          src/core/frame@obj@ \
          src/core/validation@obj@ \
          src/core/bytecodedump@obj@ \
          src/core/threads@obj@ \
          src/core/ops@obj@ \
          src/core/hll@obj@ \
          src/core/loadbytecode@obj@ \
          src/core/coerce@obj@ \
          src/gc/orchestrate@obj@ \
          src/gc/allocation@obj@ \
          src/gc/worklist@obj@ \
          src/gc/roots@obj@ \
          src/io/fileops@obj@ \
          src/io/socketops@obj@ \
          src/io/dirops@obj@ \
          src/io/procops@obj@ \
          src/gc/collect@obj@ \
          src/gc/gen2@obj@ \
          src/gc/wb@obj@ \
          src/6model/reprs@obj@ \
          src/6model/reprconv@obj@ \
          src/6model/containers@obj@ \
          src/6model/reprs/MVMString@obj@ \
          src/6model/reprs/MVMArray@obj@ \
          src/6model/reprs/MVMHash@obj@ \
          src/6model/reprs/MVMCFunction@obj@ \
          src/6model/reprs/KnowHOWREPR@obj@ \
          src/6model/reprs/KnowHOWAttributeREPR@obj@ \
          src/6model/reprs/P6str@obj@ \
          src/6model/reprs/P6opaque@obj@ \
          src/6model/reprs/MVMCode@obj@ \
          src/6model/reprs/MVMOSHandle@obj@ \
          src/6model/reprs/MVMCompUnit@obj@ \
          src/6model/reprs/MVMStaticFrame@obj@ \
          src/6model/reprs/P6int@obj@ \
          src/6model/reprs/P6num@obj@ \
          src/6model/reprs/Uninstantiable@obj@ \
          src/6model/reprs/HashAttrStore@obj@ \
          src/6model/reprs/MVMThread@obj@ \
          src/6model/reprs/MVMIter@obj@ \
          src/6model/reprs/MVMContext@obj@ \
          src/6model/reprs/SCRef@obj@ \
          src/6model/reprs/Lexotic@obj@ \
          src/6model/reprs/MVMCallCapture@obj@ \
          src/6model/reprs/P6bigint@obj@ \
          src/6model/reprs/NFA@obj@ \
          src/6model/reprs/MVMException@obj@ \
          src/6model/6model@obj@ \
          src/6model/bootstrap@obj@ \
          src/6model/sc@obj@ \
          src/6model/serialization@obj@ \
          src/mast/compiler@obj@ \
          src/strings/ascii@obj@ \
          src/strings/utf8@obj@ \
          src/strings/ops@obj@ \
          src/strings/unicode@obj@ \
          src/strings/latin1@obj@ \
          src/strings/utf16@obj@ \
          src/math/bigintops@obj@ \
          src/moarvm@obj@ \
          @platform@

HEADERS = src/moarvm.h \
          src/types.h \
          src/6model/6model.h \
          src/core/instance.h \
          src/core/threadcontext.h \
          src/core/args.h \
          src/core/exceptions.h \
          src/core/interp.h \
          src/core/frame.h \
          src/core/compunit.h \
          src/core/bytecode.h \
          src/core/ops.h \
          src/core/validation.h \
          src/core/bytecodedump.h \
          src/core/threads.h \
          src/core/hll.h \
          src/core/loadbytecode.h \
          src/core/coerce.h \
          src/io/fileops.h \
          src/io/socketops.h \
          src/io/dirops.h \
          src/io/procops.h \
          src/gc/orchestrate.h \
          src/gc/allocation.h \
          src/gc/worklist.h \
          src/gc/collect.h \
          src/gc/roots.h \
          src/gc/gen2.h \
          src/gc/wb.h \
          src/6model/reprs.h \
          src/6model/reprconv.h \
          src/6model/bootstrap.h \
          src/6model/serialization.h \
          src/6model/containers.h \
          src/6model/reprs/MVMString.h \
          src/6model/reprs/MVMArray.h \
          src/6model/reprs/MVMHash.h \
          src/6model/reprs/MVMCFunction.h \
          src/6model/reprs/KnowHOWREPR.h \
          src/6model/reprs/KnowHOWAttributeREPR.h \
          src/6model/reprs/P6opaque.h \
          src/6model/reprs/MVMCode.h \
          src/6model/reprs/P6str.h \
          src/6model/reprs/MVMOSHandle.h \
          src/6model/reprs/P6int.h \
          src/6model/reprs/P6num.h \
          src/6model/reprs/Uninstantiable.h \
          src/6model/reprs/HashAttrStore.h \
          src/6model/reprs/MVMThread.h \
          src/6model/reprs/MVMIter.h \
          src/6model/reprs/MVMContext.h \
          src/6model/reprs/SCRef.h \
          src/6model/reprs/Lexotic.h \
          src/6model/reprs/MVMCallCapture.h \
          src/6model/reprs/P6bigint.h \
          src/6model/reprs/NFA.h \
          src/6model/reprs/MVMException.h \
          src/6model/sc.h \
          src/strings/unicode_gen.h \
          src/strings/ascii.h \
          src/strings/utf8.h \
          src/strings/ops.h \
          src/strings/unicode.h \
          src/strings/latin1.h \
          src/strings/utf16.h \
          src/math/bigintops.h \
          src/platform/mmap.h \
          src/platform/time.h \
          src/gen/config.h \
          3rdparty/uthash.h \
          3rdparty/apr/include/apr.h

UV_UNIX = 3rdparty/libuv/src/fs-poll@obj@ \
          3rdparty/libuv/src/inet@obj@ \
          3rdparty/libuv/src/uv-common@obj@ \
          3rdparty/libuv/src/version@obj@ \
          3rdparty/libuv/src/unix/async@obj@ \
          3rdparty/libuv/src/unix/core@obj@ \
          3rdparty/libuv/src/unix/dl@obj@ \
          3rdparty/libuv/src/unix/fs@obj@ \
          3rdparty/libuv/src/unix/getaddrinfo@obj@ \
          3rdparty/libuv/src/unix/loop-watcher@obj@ \
          3rdparty/libuv/src/unix/loop@obj@ \
          3rdparty/libuv/src/unix/pipe@obj@ \
          3rdparty/libuv/src/unix/poll@obj@ \
          3rdparty/libuv/src/unix/process@obj@ \
          3rdparty/libuv/src/unix/signal@obj@ \
          3rdparty/libuv/src/unix/stream@obj@ \
          3rdparty/libuv/src/unix/tcp@obj@ \
          3rdparty/libuv/src/unix/thread@obj@ \
          3rdparty/libuv/src/unix/threadpool@obj@ \
          3rdparty/libuv/src/unix/timer@obj@ \
          3rdparty/libuv/src/unix/tty@obj@ \
          3rdparty/libuv/src/unix/udp@obj@

UV_LINUX = 3rdparty/libuv/src/unix/linux-core@obj@ \
           3rdparty/libuv/src/unix/linux-inotify@obj@ \
           3rdparty/libuv/src/unix/linux-syscalls@obj@ \
           3rdparty/libuv/src/unix/proctitle@obj@ \
           $(UV_UNIX)

UV_OPENBSD = 3rdparty/libuv/src/unix/openbsd@obj@ \
             3rdparty/libuv/src/unix/kqueue@obj@ \
             $(UV_UNIX)

UV_NETBSD = 3rdparty/libuv/src/unix/netbsd@obj@ \
            3rdparty/libuv/src/unix/kqueue@obj@ \
            $(UV_UNIX)

UV_FREEBSD = 3rdparty/libuv/src/unix/freebsd@obj@ \
             3rdparty/libuv/src/unix/kqueue@obj@ \
             $(UV_UNIX)

UV_DARWIN = 3rdparty/libuv/src/unix/darwin@obj@ \
            3rdparty/libuv/src/unix/darwin-proctitle@obj@ \
            3rdparty/libuv/src/unix/fsevents@obj@ \
            3rdparty/libuv/src/unix/kqueue@obj@ \
            3rdparty/libuv/src/unix/proctitle@obj@ \
            $(UV_UNIX)

UV_OBJECTS = # _uvobjects_

TOM_OBJECTS = @tomobjects@

THIRDPARTY = @thirdpartylibs@

.SUFFIXES: .c @obj@

all: moarvm@exe@

lib: @moar@

help:
	@$(CAT) build/help.txt

test:
	@$(CAT) build/test.txt

moarvm@exe@: $(MAIN_OBJECTS) @moar@
	$(MSG) linking $@
	$(CMD)$(LD) @ldout@$@ $(LDFLAGS) $(MAIN_OBJECTS) $(MAIN_LIBS)

@moarlib@: $(OBJECTS) $(THIRDPARTY)
	$(MSG) linking $@
	$(CMD)$(AR) $(ARFLAGS) @arout@$@ $(OBJECTS) $(NOOUT)

@moardll@: $(OBJECTS) $(THIRDPARTY)
	$(MSG) linking $@
	$(CMD)$(LD) @ldout@$@ $(LDFLAGS) @ldshared@ $(OBJECTS) $(DLL_LIBS)

apr: @aprlib@

libuv: _uvlib_

$(MAIN_OBJECTS) $(OBJECTS): $(HEADERS)

tracing:
	$(MSG) enable tracing
	-$(CMD)$(RM) src/main@obj@ src/core/interp@obj@
	$(CMD)$(MAKE) TRACING=1 NOISY="$(NOISY)"

no-tracing:
	$(MSG) disable tracing
	-$(CMD)$(RM) src/main@obj@ src/core/interp@obj@
	$(CMD)$(MAKE) TRACING=0 NOISY="$(NOISY)"

.c@obj@:
	$(MSG) compiling $@
	$(CMD)$(CC) @ccswitch@ $(CFLAGS) @objflags@ $(CINCLUDES) @ccout@$@ $*.c

src/main@obj@: src/main.c
	$(MSG) compiling $@
	$(CMD)$(CC) @ccswitch@ $(CFLAGS) @mainflags@ $(CINCLUDES) @ccout@$@ $*.c

src/strings/unicode.c: src/strings/unicode_db.c src/strings/unicode_ops.c
	$(MSG) generating $@
	$(CMD)$(CAT) src/strings/unicode_db.c src/strings/unicode_ops.c > $@ $(NOERR)

3rdparty/apr/include/apr.h: @aprlib@

@aprlib@:
	$(MSG) building $@...
	$(CMD)@aprrule@ $(NOOUT)
	$(MSG) done.

_uvlib_: _uvobjects_
	_uvrule_

@laolib@:
	$(MSG) linking $@
	$(CMD)@laorule@ $(NOOUT)

@tomlib@: $(TOM_OBJECTS)
	$(MSG) linking $@
	$(CMD)@tomrule@ $(NOOUT)

@shalib@: @shaobjects@
	$(MSG) linking $@
	$(CMD)@sharule@ $(NOOUT)

@lnlib@: @lnobjects@
	$(MSG) linking $@
	$(CMD)@lnrule@ $(NOOUT)

@dclib@:
	$(MSG) building dyncall...
	$(CMD)@dcrule@ $(NOOUT)
	$(MSG) done.

@dcblib@ @dllib@: @dclib@

clean:
	$(MSG) remove build files
	-$(CMD)$(RM) $(MAIN_OBJECTS) $(OBJECTS) $(NOOUT) $(NOERR)

realclean: clean
	$(MSG) remove auxiliary files
	-$(CMD)@auxclean@ $(NOOUT) $(NOERR)
	$(MSG) remove 3rdparty files
	-$(CMD)@aprclean@ $(NOOUT) $(NOERR)
#	_uvclean_
	-$(CMD)@laoclean@ $(NOOUT) $(NOERR)
	-$(CMD)@tomclean@ $(NOOUT) $(NOERR)
	-$(CMD)@shaclean@ $(NOOUT) $(NOERR)
	-$(CMD)@lnclean@ $(NOOUT) $(NOERR)
	-$(CMD)@dcclean@ $(NOOUT) $(NOERR)

distclean: realclean
	$(MSG) remove executable and libraries
	-$(CMD)$(RM) moarvm@exe@ @moarlib@ @moardll@ $(NOOUT) $(NOERR)
	$(MSG) remove configuration and generated files
	-$(CMD)$(RM) Makefile src/gen/config.h src/strings/unicode.c $(NOOUT) $(NOERR)

sandwich:
	@echo What? Make it yourself.
