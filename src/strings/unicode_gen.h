
#define MVMNUMUNICODEEXTENTS 85


struct MVMUnicodeNamedValue {
    const char *name;
    MVMint32 value;
};
#define num_unicode_property_keypairs 287

#define MVMCODEPOINTNAMESCOUNT 43833
#define MVMNUMPROPERTYCODES 82


#define num_unicode_property_value_keypairs 2083

typedef enum {
    MVM_UNICODE_PROPERTY_DECOMP_SPEC = 1,
    MVM_UNICODE_PROPERTY_CASE_CHANGE_INDEX = 2,
    MVM_UNICODE_PROPERTY_NUMERIC_VALUE = 3,
    MVM_UNICODE_PROPERTY_CASE_FOLDING = 4,
    MVM_UNICODE_PROPERTY_BIDI_MIRRORING_GLYPH = 5,
    MVM_UNICODE_PROPERTY_BLOCK = 6,
    MVM_UNICODE_PROPERTY_AGE = 7,
    MVM_UNICODE_PROPERTY_SCRIPT = 8,
    MVM_UNICODE_PROPERTY_CANONICAL_COMBINING_CLASS = 9,
    MVM_UNICODE_PROPERTY_JOINING_GROUP = 10,
    MVM_UNICODE_PROPERTY_BIDI_CLASS = 11,
    MVM_UNICODE_PROPERTY_GENERAL_CATEGORY = 12,
    MVM_UNICODE_PROPERTY_HANGUL_SYLLABLE_TYPE = 13,
    MVM_UNICODE_PROPERTY_DECOMPOSITION_TYPE = 14,
    MVM_UNICODE_PROPERTY_WORD_BREAK = 15,
    MVM_UNICODE_PROPERTY_LINE_BREAK = 16,
    MVM_UNICODE_PROPERTY_SENTENCE_BREAK = 17,
    MVM_UNICODE_PROPERTY_GRAPHEME_CLUSTER_BREAK = 18,
    MVM_UNICODE_PROPERTY_NUMERIC_TYPE = 19,
    MVM_UNICODE_PROPERTY_NFKC_QC = 20,
    MVM_UNICODE_PROPERTY_JOINING_TYPE = 21,
    MVM_UNICODE_PROPERTY_NFC_QC = 22,
    MVM_UNICODE_PROPERTY_NUMERIC_VALUE_DENOMINATOR = 23,
    MVM_UNICODE_PROPERTY_NUMERIC_VALUE_NUMERATOR = 24,
    MVM_UNICODE_PROPERTY_ASCII_HEX_DIGIT = 25,
    MVM_UNICODE_PROPERTY_ALPHABETIC = 26,
    MVM_UNICODE_PROPERTY_BIDI_CONTROL = 27,
    MVM_UNICODE_PROPERTY_BIDI_MIRRORED = 28,
    MVM_UNICODE_PROPERTY_CASE_FOLDING_SIMPLE = 29,
    MVM_UNICODE_PROPERTY_CASE_IGNORABLE = 30,
    MVM_UNICODE_PROPERTY_CASED = 31,
    MVM_UNICODE_PROPERTY_CHANGES_WHEN_CASEFOLDED = 32,
    MVM_UNICODE_PROPERTY_CHANGES_WHEN_CASEMAPPED = 33,
    MVM_UNICODE_PROPERTY_CHANGES_WHEN_LOWERCASED = 34,
    MVM_UNICODE_PROPERTY_CHANGES_WHEN_NFKC_CASEFOLDED = 35,
    MVM_UNICODE_PROPERTY_CHANGES_WHEN_TITLECASED = 36,
    MVM_UNICODE_PROPERTY_CHANGES_WHEN_UPPERCASED = 37,
    MVM_UNICODE_PROPERTY_DASH = 38,
    MVM_UNICODE_PROPERTY_DEFAULT_IGNORABLE_CODE_POINT = 39,
    MVM_UNICODE_PROPERTY_DEPRECATED = 40,
    MVM_UNICODE_PROPERTY_DIACRITIC = 41,
    MVM_UNICODE_PROPERTY_EXTENDER = 42,
    MVM_UNICODE_PROPERTY_FULL_COMPOSITION_EXCLUSION = 43,
    MVM_UNICODE_PROPERTY_GRAPHEME_BASE = 44,
    MVM_UNICODE_PROPERTY_GRAPHEME_EXTEND = 45,
    MVM_UNICODE_PROPERTY_GRAPHEME_LINK = 46,
    MVM_UNICODE_PROPERTY_HEX_DIGIT = 47,
    MVM_UNICODE_PROPERTY_HYPHEN = 48,
    MVM_UNICODE_PROPERTY_IDS_BINARY_OPERATOR = 49,
    MVM_UNICODE_PROPERTY_IDS_TRINARY_OPERATOR = 50,
    MVM_UNICODE_PROPERTY_ID_CONTINUE = 51,
    MVM_UNICODE_PROPERTY_ID_START = 52,
    MVM_UNICODE_PROPERTY_IDEOGRAPHIC = 53,
    MVM_UNICODE_PROPERTY_JOIN_CONTROL = 54,
    MVM_UNICODE_PROPERTY_LOGICAL_ORDER_EXCEPTION = 55,
    MVM_UNICODE_PROPERTY_LOWERCASE = 56,
    MVM_UNICODE_PROPERTY_MATH = 57,
    MVM_UNICODE_PROPERTY_NFD_QC = 58,
    MVM_UNICODE_PROPERTY_NFKD_QC = 59,
    MVM_UNICODE_PROPERTY_NONCHARACTER_CODE_POINT = 60,
    MVM_UNICODE_PROPERTY_OTHER_ALPHABETIC = 61,
    MVM_UNICODE_PROPERTY_OTHER_DEFAULT_IGNORABLE_CODE_POINT = 62,
    MVM_UNICODE_PROPERTY_OTHER_GRAPHEME_EXTEND = 63,
    MVM_UNICODE_PROPERTY_OTHER_ID_CONTINUE = 64,
    MVM_UNICODE_PROPERTY_OTHER_ID_START = 65,
    MVM_UNICODE_PROPERTY_OTHER_LOWERCASE = 66,
    MVM_UNICODE_PROPERTY_OTHER_MATH = 67,
    MVM_UNICODE_PROPERTY_OTHER_UPPERCASE = 68,
    MVM_UNICODE_PROPERTY_PATTERN_SYNTAX = 69,
    MVM_UNICODE_PROPERTY_PATTERN_WHITE_SPACE = 70,
    MVM_UNICODE_PROPERTY_QUOTATION_MARK = 71,
    MVM_UNICODE_PROPERTY_RADICAL = 72,
    MVM_UNICODE_PROPERTY_STERM = 73,
    MVM_UNICODE_PROPERTY_SOFT_DOTTED = 74,
    MVM_UNICODE_PROPERTY_TERMINAL_PUNCTUATION = 75,
    MVM_UNICODE_PROPERTY_UNIFIED_IDEOGRAPH = 76,
    MVM_UNICODE_PROPERTY_UPPERCASE = 77,
    MVM_UNICODE_PROPERTY_VARIATION_SELECTOR = 78,
    MVM_UNICODE_PROPERTY_WHITE_SPACE = 79,
    MVM_UNICODE_PROPERTY_XID_CONTINUE = 80,
    MVM_UNICODE_PROPERTY_XID_START = 81,
} MVM_unicode_property_codes;

MVMint64 MVM_unicode_codepoint_has_property_value(MVMThreadContext *tc, MVMCodepoint32 codepoint, MVMint64 property_code, MVMint64 property_value_code);
