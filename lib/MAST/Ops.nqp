# This file is generated from src/core/oplist by tools/update_ops.p6.


class MAST::Ops {}
BEGIN {
    MAST::Ops.WHO<@offsets> := nqp::list_i(0,
    0,
    2,
    4,
    6,
    8,
    10,
    12,
    14,
    16,
    18,
    20,
    22,
    24,
    26,
    28,
    30,
    32,
    34,
    36,
    38,
    40,
    42,
    44,
    45,
    47,
    49,
    51,
    53,
    55,
    57,
    59,
    61,
    63,
    65,
    67,
    69,
    71,
    73,
    75,
    77,
    79,
    81,
    83,
    85,
    87,
    89,
    91,
    93,
    95,
    99,
    102,
    103,
    104,
    105,
    106,
    106,
    109,
    112,
    115,
    118,
    121,
    124,
    127,
    130,
    133,
    136,
    139,
    142,
    145,
    148,
    150,
    152,
    153,
    154,
    155,
    156,
    159,
    162,
    165,
    167,
    170,
    173,
    176,
    178,
    181,
    184,
    187,
    190,
    193,
    196,
    199,
    202,
    205,
    208,
    211,
    214,
    217,
    220,
    222,
    224,
    227,
    229,
    231,
    233,
    235,
    237,
    239,
    241,
    243,
    246,
    248,
    250,
    252,
    254,
    256,
    258,
    260,
    262,
    264,
    266,
    268,
    270,
    272,
    274,
    276,
    278,
    280,
    281,
    283,
    285,
    287,
    289,
    291,
    293,
    295,
    296,
    298,
    300,
    302,
    304,
    306,
    308,
    310,
    312,
    314,
    317,
    320,
    323,
    326,
    328,
    330,
    332,
    334,
    337,
    340,
    343,
    346,
    348,
    349,
    351,
    353,
    354,
    356,
    357,
    359,
    361,
    363,
    365,
    367,
    369,
    371,
    373,
    375,
    377,
    379,
    381,
    383,
    384,
    385,
    386,
    388,
    390,
    392,
    393,
    394,
    396,
    399,
    402,
    405,
    408,
    411,
    414,
    416,
    419,
    423,
    426,
    427,
    429,
    432,
    435,
    438,
    441,
    444,
    447,
    450,
    454,
    458,
    464,
    467,
    470,
    474,
    478,
    480,
    482,
    485,
    488,
    490,
    492,
    494,
    497,
    500,
    502,
    506,
    510,
    512,
    515,
    520,
    525,
    527,
    529,
    531,
    534,
    538,
    540,
    542,
    544,
    548,
    553,
    558,
    561,
    565,
    571,
    576,
    580,
    583,
    585,
    587,
    588,
    590,
    592,
    595,
    598,
    601,
    604,
    606,
    608,
    610,
    613,
    616,
    618,
    620,
    622,
    624,
    627,
    629,
    631,
    634,
    639,
    644,
    649,
    654,
    658,
    662,
    666,
    670,
    675,
    680,
    685,
    690,
    694,
    698,
    702,
    706,
    710,
    713,
    716,
    719,
    721,
    723,
    725,
    728,
    731,
    734,
    737,
    740,
    743,
    746,
    749,
    751,
    753,
    755,
    757,
    759,
    761,
    763,
    765,
    767,
    769,
    771,
    773,
    775,
    777,
    779,
    781,
    785,
    787,
    790,
    793,
    796,
    799,
    802,
    805,
    808,
    811,
    814,
    817,
    819,
    821,
    822,
    823,
    826,
    829,
    831,
    833,
    835,
    837,
    840,
    842,
    844,
    845,
    846,
    847,
    848,
    849,
    850,
    851,
    852,
    854,
    856,
    858,
    860,
    862,
    864,
    865,
    866,
    867,
    868,
    869,
    871,
    874,
    876,
    879,
    882,
    885,
    887,
    889,
    891,
    894,
    894,
    894,
    896,
    898,
    900,
    902,
    904,
    906,
    908,
    910,
    912,
    916,
    918,
    920,
    921,
    922,
    924,
    926,
    927,
    928,
    930,
    932,
    934,
    936,
    939,
    941,
    943,
    946,
    949,
    952,
    954,
    957,
    959,
    961,
    963,
    965,
    968,
    973,
    976,
    979,
    980,
    981,
    982,
    983,
    985,
    987,
    990,
    993,
    995,
    997,
    999,
    1000,
    1002,
    1004,
    1006,
    1007,
    1008,
    1012,
    1016,
    1020,
    1024,
    1028,
    1031,
    1034,
    1037,
    1040,
    1043,
    1046,
    1049,
    1052,
    1055,
    1059,
    1063,
    1067,
    1070,
    1074,
    1078,
    1083,
    1087,
    1091,
    1096,
    1099,
    1102,
    1104,
    1106,
    1109,
    1112,
    1114,
    1116,
    1119,
    1125,
    1128,
    1130,
    1132,
    1134,
    1135,
    1137,
    1139,
    1141,
    1142,
    1144,
    1146,
    1147,
    1150,
    1151,
    1154,
    1157,
    1160,
    1163,
    1166,
    1169,
    1170,
    1171,
    1173,
    1175,
    1176,
    1177,
    1178,
    1181,
    1183,
    1187,
    1189,
    1191,
    1195,
    1198,
    1200,
    1201,
    1202,
    1204,
    1206,
    1209,
    1212,
    1215,
    1216,
    1217,
    1218,
    1219,
    1220,
    1221,
    1224,
    1225,
    1226,
    1227,
    1235,
    1236,
    1237,
    1238,
    1240,
    1241,
    1244,
    1245,
    1247,
    1248,
    1250,
    1253,
    1256,
    1259,
    1261,
    1264,
    1267,
    1270,
    1272,
    1273,
    1274,
    1275,
    1276,
    1284,
    1286,
    1288,
    1290,
    1293,
    1295,
    1298,
    1300,
    1305,
    1306,
    1309,
    1311,
    1313,
    1315,
    1316,
    1317,
    1319,
    1322,
    1326,
    1329,
    1331,
    1335,
    1336,
    1339,
    1339,
    1341,
    1344,
    1347,
    1350,
    1354,
    1361,
    1365,
    1366,
    1367,
    1369,
    1369,
    1370,
    1371,
    1372,
    1373,
    1375,
    1376,
    1379,
    1380,
    1381,
    1382,
    1384,
    1388,
    1390,
    1392,
    1398,
    1399,
    1404,
    1409,
    1415,
    1422,
    1428,
    1434,
    1439,
    1445,
    1447,
    1449,
    1450,
    1452,
    1454,
    1456,
    1459,
    1462,
    1465,
    1468,
    1472,
    1476,
    1480,
    1484,
    1484,
    1488,
    1494,
    1496,
    1497,
    1498,
    1500,
    1502,
    1502,
    1507,
    1509,
    1511,
    1514,
    1516,
    1518,
    1521,
    1523,
    1526,
    1528,
    1530,
    1532,
    1534,
    1536,
    1538,
    1540,
    1542,
    1544,
    1545,
    1547,
    1549,
    1551,
    1553,
    1555,
    1557,
    1559,
    1561,
    1564,
    1567,
    1570,
    1575,
    1580,
    1585,
    1589,
    1593,
    1597,
    1599,
    1603,
    1606,
    1608,
    1611,
    1613,
    1617,
    1620,
    1621,
    1622,
    1623,
    1627,
    1631,
    1635,
    1639,
    1644,
    1649,
    1654,
    1659,
    1662,
    1665,
    1668,
    1671,
    1675,
    1679,
    1683,
    1687,
    1692,
    1697,
    1702,
    1707,
    1710,
    1713,
    1716,
    1719,
    1721,
    1723,
    1725,
    1727,
    1729,
    1731,
    1733,
    1735,
    1740,
    1742,
    1745,
    1748,
    1751,
    1753,
    1760,
    1768,
    1776,
    1778,
    1780,
    1782,
    1784,
    1786,
    1788,
    1790,
    1792,
    1794,
    1796,
    1799,
    1801,
    1803,
    1805,
    1807,
    1809,
    1811,
    1813,
    1815,
    1817,
    1819,
    1821,
    1823,
    1825,
    1827,
    1829,
    1832,
    1834,
    1837,
    1840,
    1844,
    1847,
    1850,
    1852,
    1853,
    1855,
    1858,
    1861,
    1862,
    1865,
    1868,
    1870,
    1872,
    1875,
    1877,
    1879,
    1883,
    1885,
    1889,
    1891,
    1893,
    1894,
    1900,
    1902,
    1904,
    1908,
    1910,
    1911,
    1915,
    1919,
    1922,
    1926,
    1930,
    1934,
    1936,
    1938,
    1941,
    1943,
    1945,
    1947,
    1949,
    1949,
    1950,
    1952,
    1955,
    1958,
    1961,
    1964,
    1966,
    1968,
    1970,
    1972,
    1975,
    1981,
    1986,
    1990,
    1995,
    1996,
    1997,
    2001,
    2004,
    2006,
    2008,
    2009,
    2010,
    2011,
    2015,
    2019,
    2025,
    2028,
    2030,
    2033,
    2036,
    2039,
    2042,
    2045,
    2048,
    2050,
    2052,
    2056,
    2058,
    2060,
    2062,
    2064,
    2066,
    2068,
    2070,
    2072,
    2074,
    2076,
    2079,
    2082,
    2085,
    2088,
    2089,
    2091,
    2095,
    2098,
    2101,
    2104,
    2107,
    2110,
    2113,
    2116,
    2119,
    2122,
    2125,
    2128,
    2131,
    2134,
    2137,
    2140,
    2143,
    2147,
    2151,
    2154,
    2157,
    2160,
    2163,
    2166,
    2169,
    2172,
    2175,
    2178,
    2181,
    2184,
    2188,
    2192,
    2195,
    2198,
    2199,
    2201,
    2203,
    2205,
    2209,
    2211,
    2213,
    2213,
    2213,
    2214,
    2215,
    2215,
    2216,
    2218,
    2222);
    MAST::Ops.WHO<@counts> := nqp::list_i(0,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    4,
    3,
    1,
    1,
    1,
    1,
    0,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    2,
    2,
    1,
    1,
    1,
    1,
    3,
    3,
    3,
    2,
    3,
    3,
    3,
    2,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    2,
    2,
    3,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    3,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    2,
    1,
    2,
    2,
    1,
    2,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    1,
    1,
    1,
    2,
    2,
    2,
    1,
    1,
    2,
    3,
    3,
    3,
    3,
    3,
    3,
    2,
    3,
    4,
    3,
    1,
    2,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    4,
    4,
    6,
    3,
    3,
    4,
    4,
    2,
    2,
    3,
    3,
    2,
    2,
    2,
    3,
    3,
    2,
    4,
    4,
    2,
    3,
    5,
    5,
    2,
    2,
    2,
    3,
    4,
    2,
    2,
    2,
    4,
    5,
    5,
    3,
    4,
    6,
    5,
    4,
    3,
    2,
    2,
    1,
    2,
    2,
    3,
    3,
    3,
    3,
    2,
    2,
    2,
    3,
    3,
    2,
    2,
    2,
    2,
    3,
    2,
    2,
    3,
    5,
    5,
    5,
    5,
    4,
    4,
    4,
    4,
    5,
    5,
    5,
    5,
    4,
    4,
    4,
    4,
    4,
    3,
    3,
    3,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    4,
    2,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    2,
    2,
    1,
    1,
    3,
    3,
    2,
    2,
    2,
    2,
    3,
    2,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    2,
    3,
    3,
    3,
    2,
    2,
    2,
    3,
    0,
    0,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    4,
    2,
    2,
    1,
    1,
    2,
    2,
    1,
    1,
    2,
    2,
    2,
    2,
    3,
    2,
    2,
    3,
    3,
    3,
    2,
    3,
    2,
    2,
    2,
    2,
    3,
    5,
    3,
    3,
    1,
    1,
    1,
    1,
    2,
    2,
    3,
    3,
    2,
    2,
    2,
    1,
    2,
    2,
    2,
    1,
    1,
    4,
    4,
    4,
    4,
    4,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    4,
    4,
    4,
    3,
    4,
    4,
    5,
    4,
    4,
    5,
    3,
    3,
    2,
    2,
    3,
    3,
    2,
    2,
    3,
    6,
    3,
    2,
    2,
    2,
    1,
    2,
    2,
    2,
    1,
    2,
    2,
    1,
    3,
    1,
    3,
    3,
    3,
    3,
    3,
    3,
    1,
    1,
    2,
    2,
    1,
    1,
    1,
    3,
    2,
    4,
    2,
    2,
    4,
    3,
    2,
    1,
    1,
    2,
    2,
    3,
    3,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    2,
    1,
    3,
    1,
    2,
    1,
    2,
    3,
    3,
    3,
    2,
    3,
    3,
    3,
    2,
    1,
    1,
    1,
    1,
    8,
    2,
    2,
    2,
    3,
    2,
    3,
    2,
    5,
    1,
    3,
    2,
    2,
    2,
    1,
    1,
    2,
    3,
    4,
    3,
    2,
    4,
    1,
    3,
    0,
    2,
    3,
    3,
    3,
    4,
    7,
    4,
    1,
    1,
    2,
    0,
    1,
    1,
    1,
    1,
    2,
    1,
    3,
    1,
    1,
    1,
    2,
    4,
    2,
    2,
    6,
    1,
    5,
    5,
    6,
    7,
    6,
    6,
    5,
    6,
    2,
    2,
    1,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    4,
    4,
    4,
    4,
    0,
    4,
    6,
    2,
    1,
    1,
    2,
    2,
    0,
    5,
    2,
    2,
    3,
    2,
    2,
    3,
    2,
    3,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    5,
    5,
    5,
    4,
    4,
    4,
    2,
    4,
    3,
    2,
    3,
    2,
    4,
    3,
    1,
    1,
    1,
    4,
    4,
    4,
    4,
    5,
    5,
    5,
    5,
    3,
    3,
    3,
    3,
    4,
    4,
    4,
    4,
    5,
    5,
    5,
    5,
    3,
    3,
    3,
    3,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    5,
    2,
    3,
    3,
    3,
    2,
    7,
    8,
    8,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    3,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    3,
    2,
    3,
    3,
    4,
    3,
    3,
    2,
    1,
    2,
    3,
    3,
    1,
    3,
    3,
    2,
    2,
    3,
    2,
    2,
    4,
    2,
    4,
    2,
    2,
    1,
    6,
    2,
    2,
    4,
    2,
    1,
    4,
    4,
    3,
    4,
    4,
    4,
    2,
    2,
    3,
    2,
    2,
    2,
    2,
    0,
    1,
    2,
    3,
    3,
    3,
    3,
    2,
    2,
    2,
    2,
    3,
    6,
    5,
    4,
    5,
    1,
    1,
    4,
    3,
    2,
    2,
    1,
    1,
    1,
    4,
    4,
    6,
    3,
    2,
    3,
    3,
    3,
    3,
    3,
    3,
    2,
    2,
    4,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    1,
    2,
    4,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    4,
    4,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    4,
    4,
    3,
    3,
    1,
    2,
    2,
    2,
    4,
    2,
    2,
    0,
    0,
    1,
    1,
    0,
    1,
    2,
    4,
    2);
    MAST::Ops.WHO<@values> := nqp::list_i(10,
    8,
    18,
    16,
    26,
    24,
    34,
    32,
    42,
    40,
    50,
    48,
    58,
    56,
    82,
    81,
    162,
    137,
    162,
    145,
    162,
    153,
    34,
    9,
    34,
    17,
    34,
    25,
    138,
    161,
    146,
    161,
    154,
    161,
    10,
    33,
    18,
    33,
    26,
    33,
    50,
    41,
    42,
    49,
    72,
    33,
    72,
    33,
    72,
    49,
    72,
    49,
    72,
    57,
    72,
    57,
    72,
    57,
    72,
    57,
    72,
    65,
    72,
    65,
    72,
    32,
    33,
    82,
    83,
    84,
    81,
    34,
    56,
    50,
    56,
    58,
    56,
    66,
    56,
    56,
    33,
    56,
    49,
    56,
    57,
    56,
    65,
    66,
    57,
    57,
    65,
    66,
    57,
    57,
    65,
    65,
    56,
    65,
    16,
    34,
    65,
    57,
    33,
    49,
    57,
    65,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    162,
    161,
    161,
    34,
    33,
    33,
    162,
    161,
    161,
    34,
    33,
    34,
    33,
    34,
    162,
    34,
    162,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    34,
    49,
    49,
    34,
    49,
    49,
    34,
    49,
    49,
    34,
    49,
    49,
    34,
    49,
    49,
    34,
    49,
    49,
    34,
    49,
    49,
    50,
    49,
    49,
    50,
    49,
    49,
    50,
    49,
    49,
    50,
    49,
    49,
    50,
    49,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    49,
    50,
    33,
    34,
    49,
    58,
    33,
    58,
    49,
    34,
    57,
    50,
    57,
    50,
    65,
    58,
    65,
    104,
    16,
    33,
    16,
    49,
    16,
    57,
    16,
    65,
    16,
    32,
    16,
    48,
    16,
    56,
    65,
    34,
    65,
    50,
    65,
    58,
    65,
    66,
    65,
    16,
    16,
    34,
    16,
    50,
    16,
    58,
    16,
    66,
    16,
    34,
    16,
    72,
    50,
    16,
    72,
    58,
    16,
    72,
    66,
    16,
    72,
    34,
    56,
    50,
    56,
    58,
    56,
    66,
    56,
    34,
    56,
    72,
    50,
    56,
    72,
    58,
    56,
    72,
    66,
    56,
    72,
    66,
    16,
    66,
    66,
    96,
    66,
    33,
    65,
    66,
    65,
    66,
    65,
    57,
    65,
    65,
    65,
    33,
    58,
    65,
    66,
    65,
    34,
    65,
    66,
    65,
    66,
    65,
    66,
    65,
    66,
    32,
    66,
    32,
    66,
    32,
    66,
    57,
    65,
    65,
    66,
    66,
    72,
    66,
    65,
    66,
    65,
    66,
    66,
    34,
    65,
    66,
    65,
    33,
    34,
    65,
    33,
    50,
    65,
    33,
    58,
    65,
    33,
    34,
    65,
    33,
    34,
    65,
    57,
    34,
    65,
    66,
    65,
    65,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    58,
    34,
    57,
    34,
    57,
    57,
    34,
    57,
    57,
    34,
    57,
    57,
    34,
    57,
    57,
    34,
    57,
    57,
    34,
    57,
    57,
    34,
    57,
    57,
    34,
    57,
    57,
    33,
    34,
    57,
    57,
    33,
    34,
    57,
    33,
    33,
    57,
    33,
    58,
    57,
    57,
    58,
    57,
    33,
    58,
    57,
    33,
    33,
    34,
    57,
    57,
    33,
    34,
    57,
    34,
    57,
    34,
    57,
    33,
    34,
    57,
    33,
    58,
    57,
    58,
    57,
    58,
    57,
    66,
    57,
    57,
    58,
    57,
    65,
    34,
    57,
    57,
    33,
    56,
    72,
    57,
    33,
    56,
    72,
    34,
    57,
    34,
    33,
    57,
    34,
    57,
    33,
    33,
    33,
    34,
    57,
    33,
    16,
    16,
    34,
    57,
    58,
    33,
    34,
    57,
    34,
    57,
    33,
    34,
    57,
    57,
    33,
    58,
    57,
    58,
    57,
    65,
    33,
    34,
    33,
    57,
    33,
    34,
    33,
    57,
    33,
    33,
    34,
    33,
    57,
    33,
    33,
    66,
    65,
    65,
    66,
    65,
    57,
    33,
    65,
    57,
    33,
    65,
    65,
    65,
    66,
    33,
    57,
    33,
    33,
    66,
    57,
    57,
    65,
    58,
    65,
    57,
    34,
    57,
    34,
    57,
    66,
    34,
    65,
    65,
    72,
    66,
    65,
    56,
    66,
    65,
    57,
    34,
    65,
    56,
    34,
    65,
    57,
    66,
    65,
    66,
    65,
    34,
    65,
    66,
    65,
    65,
    34,
    65,
    65,
    34,
    65,
    66,
    65,
    66,
    65,
    66,
    65,
    66,
    65,
    65,
    58,
    65,
    34,
    65,
    34,
    65,
    65,
    65,
    65,
    56,
    33,
    16,
    65,
    65,
    56,
    49,
    16,
    65,
    65,
    56,
    57,
    16,
    65,
    65,
    56,
    65,
    16,
    65,
    65,
    57,
    33,
    65,
    65,
    57,
    49,
    65,
    65,
    57,
    57,
    65,
    65,
    57,
    65,
    34,
    65,
    65,
    56,
    16,
    50,
    65,
    65,
    56,
    16,
    58,
    65,
    65,
    56,
    16,
    66,
    65,
    65,
    56,
    16,
    34,
    65,
    65,
    57,
    50,
    65,
    65,
    57,
    58,
    65,
    65,
    57,
    66,
    65,
    65,
    57,
    34,
    65,
    65,
    57,
    66,
    33,
    65,
    66,
    49,
    65,
    66,
    57,
    65,
    34,
    65,
    50,
    65,
    58,
    65,
    34,
    65,
    33,
    50,
    65,
    33,
    58,
    65,
    33,
    66,
    65,
    33,
    65,
    33,
    33,
    65,
    33,
    49,
    65,
    33,
    57,
    65,
    33,
    65,
    65,
    33,
    65,
    49,
    65,
    57,
    65,
    65,
    34,
    65,
    50,
    65,
    58,
    65,
    66,
    65,
    34,
    65,
    50,
    65,
    58,
    65,
    66,
    65,
    65,
    33,
    65,
    49,
    65,
    57,
    65,
    65,
    65,
    65,
    33,
    33,
    65,
    33,
    34,
    65,
    33,
    34,
    65,
    57,
    50,
    65,
    57,
    58,
    65,
    57,
    66,
    65,
    57,
    65,
    57,
    33,
    65,
    57,
    49,
    65,
    57,
    57,
    65,
    57,
    65,
    34,
    65,
    57,
    65,
    57,
    34,
    65,
    66,
    66,
    66,
    65,
    57,
    66,
    65,
    65,
    65,
    65,
    65,
    33,
    65,
    65,
    65,
    33,
    65,
    33,
    65,
    34,
    65,
    34,
    65,
    66,
    66,
    66,
    66,
    66,
    66,
    66,
    66,
    34,
    65,
    34,
    65,
    34,
    65,
    34,
    65,
    34,
    65,
    57,
    65,
    66,
    66,
    66,
    66,
    66,
    66,
    57,
    66,
    57,
    65,
    66,
    57,
    66,
    57,
    65,
    66,
    57,
    57,
    57,
    57,
    65,
    65,
    57,
    65,
    33,
    66,
    65,
    66,
    65,
    57,
    66,
    65,
    58,
    65,
    66,
    65,
    58,
    65,
    34,
    65,
    66,
    65,
    65,
    65,
    65,
    57,
    65,
    65,
    65,
    65,
    57,
    65,
    34,
    65,
    66,
    65,
    65,
    65,
    66,
    65,
    58,
    65,
    65,
    66,
    65,
    65,
    65,
    65,
    34,
    65,
    66,
    65,
    65,
    57,
    65,
    58,
    57,
    66,
    57,
    65,
    33,
    65,
    65,
    33,
    65,
    66,
    65,
    33,
    58,
    65,
    34,
    65,
    65,
    65,
    57,
    34,
    65,
    65,
    65,
    66,
    65,
    58,
    65,
    65,
    57,
    65,
    65,
    65,
    65,
    66,
    16,
    16,
    66,
    16,
    32,
    34,
    34,
    65,
    66,
    58,
    65,
    58,
    57,
    65,
    65,
    57,
    66,
    65,
    65,
    34,
    65,
    66,
    65,
    66,
    65,
    66,
    66,
    65,
    66,
    65,
    66,
    65,
    66,
    66,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    66,
    65,
    65,
    34,
    65,
    65,
    34,
    65,
    65,
    34,
    65,
    65,
    34,
    65,
    65,
    34,
    65,
    65,
    34,
    65,
    65,
    34,
    65,
    65,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    66,
    65,
    33,
    65,
    66,
    65,
    33,
    65,
    66,
    65,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    65,
    34,
    65,
    33,
    66,
    65,
    65,
    50,
    65,
    58,
    65,
    66,
    49,
    65,
    66,
    57,
    65,
    34,
    65,
    34,
    65,
    58,
    65,
    33,
    66,
    33,
    57,
    33,
    33,
    65,
    50,
    65,
    65,
    57,
    57,
    57,
    57,
    57,
    57,
    57,
    57,
    33,
    34,
    57,
    57,
    33,
    57,
    66,
    57,
    58,
    65,
    65,
    66,
    57,
    57,
    65,
    58,
    65,
    33,
    58,
    57,
    57,
    57,
    57,
    57,
    34,
    65,
    57,
    65,
    33,
    33,
    34,
    65,
    33,
    65,
    65,
    65,
    33,
    34,
    65,
    66,
    66,
    66,
    65,
    57,
    33,
    66,
    33,
    65,
    57,
    33,
    33,
    65,
    57,
    66,
    65,
    65,
    57,
    33,
    65,
    65,
    57,
    65,
    65,
    57,
    57,
    57,
    58,
    65,
    34,
    65,
    34,
    57,
    33,
    66,
    65,
    56,
    66,
    65,
    57,
    57,
    33,
    34,
    50,
    34,
    49,
    66,
    65,
    33,
    65,
    50,
    33,
    34,
    57,
    57,
    65,
    65,
    65,
    65,
    33,
    58,
    66,
    66,
    57,
    57,
    57,
    66,
    57,
    57,
    65,
    57,
    57,
    66,
    66,
    57,
    66,
    65,
    57,
    66,
    65,
    57,
    66,
    65,
    57,
    66,
    57,
    58,
    57,
    57,
    58,
    57,
    57,
    58,
    57,
    57,
    34,
    49,
    50,
    50,
    50,
    34,
    34,
    65,
    57,
    65,
    65,
    65,
    65,
    33,
    34,
    57,
    34,
    57,
    34,
    57,
    34,
    65,
    57,
    66,
    65,
    65,
    65,
    33,
    65,
    65,
    58,
    57,
    33,
    33,
    57,
    66,
    65,
    33,
    33,
    66,
    65,
    57,
    57,
    57,
    57,
    58,
    65,
    66,
    65,
    66,
    65,
    65,
    66,
    33,
    65,
    65,
    66,
    65,
    65,
    50,
    49,
    34,
    57,
    33,
    57,
    33,
    34,
    65,
    57,
    58,
    33,
    34,
    33,
    33,
    34,
    33,
    33,
    58,
    33,
    33,
    34,
    33,
    33,
    33,
    34,
    65,
    57,
    57,
    57,
    65,
    65,
    66,
    65,
    65,
    65,
    65,
    65,
    34,
    65,
    66,
    65,
    65,
    65,
    34,
    65,
    65,
    66,
    65,
    65,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    57,
    57,
    66,
    65,
    66,
    65,
    66,
    65,
    65,
    33,
    33,
    65,
    65,
    66,
    65,
    65,
    33,
    65,
    66,
    65,
    65,
    57,
    65,
    66,
    65,
    65,
    57,
    33,
    65,
    66,
    65,
    65,
    57,
    33,
    33,
    65,
    66,
    65,
    65,
    65,
    57,
    65,
    66,
    65,
    65,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    65,
    65,
    66,
    57,
    66,
    57,
    58,
    34,
    16,
    34,
    24,
    34,
    65,
    34,
    56,
    56,
    50,
    56,
    56,
    58,
    56,
    56,
    66,
    56,
    56,
    34,
    56,
    56,
    72,
    50,
    56,
    56,
    72,
    58,
    56,
    56,
    72,
    66,
    56,
    56,
    72,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    57,
    65,
    65,
    65,
    33,
    65,
    66,
    34,
    65,
    65,
    33,
    66,
    57,
    57,
    65,
    65,
    34,
    65,
    65,
    65,
    66,
    65,
    65,
    66,
    65,
    66,
    65,
    66,
    65,
    33,
    58,
    57,
    34,
    57,
    33,
    34,
    65,
    34,
    65,
    34,
    65,
    65,
    33,
    65,
    49,
    65,
    57,
    34,
    65,
    50,
    65,
    58,
    65,
    65,
    34,
    65,
    66,
    57,
    66,
    35,
    66,
    51,
    66,
    59,
    66,
    56,
    66,
    56,
    66,
    56,
    66,
    65,
    33,
    66,
    65,
    33,
    66,
    65,
    33,
    66,
    65,
    65,
    56,
    16,
    66,
    65,
    65,
    56,
    16,
    66,
    65,
    65,
    56,
    16,
    66,
    65,
    65,
    57,
    66,
    65,
    65,
    57,
    66,
    65,
    65,
    57,
    34,
    65,
    57,
    57,
    33,
    65,
    65,
    33,
    65,
    58,
    65,
    57,
    33,
    65,
    66,
    65,
    34,
    57,
    57,
    33,
    34,
    57,
    33,
    65,
    65,
    66,
    34,
    65,
    33,
    33,
    50,
    65,
    33,
    33,
    58,
    65,
    33,
    33,
    66,
    65,
    33,
    33,
    34,
    65,
    33,
    33,
    33,
    50,
    65,
    33,
    33,
    33,
    58,
    65,
    33,
    33,
    33,
    66,
    65,
    33,
    33,
    33,
    34,
    65,
    65,
    50,
    65,
    65,
    58,
    65,
    65,
    66,
    65,
    65,
    65,
    33,
    33,
    33,
    65,
    33,
    33,
    49,
    65,
    33,
    33,
    57,
    65,
    33,
    33,
    65,
    65,
    33,
    33,
    33,
    33,
    65,
    33,
    33,
    33,
    49,
    65,
    33,
    33,
    33,
    57,
    65,
    33,
    33,
    33,
    65,
    65,
    65,
    33,
    65,
    65,
    49,
    65,
    65,
    57,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    34,
    65,
    66,
    65,
    34,
    65,
    58,
    57,
    65,
    65,
    58,
    65,
    66,
    57,
    57,
    57,
    65,
    34,
    65,
    66,
    65,
    65,
    66,
    65,
    65,
    66,
    65,
    65,
    34,
    65,
    66,
    65,
    65,
    57,
    33,
    33,
    65,
    66,
    65,
    65,
    65,
    57,
    65,
    57,
    33,
    66,
    65,
    65,
    65,
    65,
    65,
    57,
    33,
    34,
    65,
    34,
    65,
    66,
    25,
    66,
    17,
    66,
    9,
    66,
    41,
    66,
    27,
    66,
    19,
    66,
    11,
    66,
    43,
    66,
    161,
    65,
    162,
    65,
    162,
    33,
    34,
    161,
    162,
    49,
    50,
    161,
    162,
    65,
    66,
    161,
    66,
    153,
    66,
    145,
    66,
    137,
    66,
    163,
    66,
    155,
    66,
    147,
    66,
    139,
    162,
    16,
    162,
    16,
    72,
    162,
    56,
    162,
    56,
    72,
    162,
    56,
    56,
    162,
    56,
    56,
    72,
    50,
    57,
    33,
    50,
    57,
    33,
    65,
    57,
    65,
    65,
    57,
    66,
    32,
    65,
    66,
    32,
    65,
    66,
    65,
    65,
    65,
    65,
    57,
    65,
    65,
    65,
    65,
    65,
    58,
    65,
    33,
    58,
    65,
    58,
    65,
    58,
    65,
    33,
    33,
    34,
    65,
    66,
    65,
    65,
    33,
    34,
    65,
    58,
    57,
    65,
    34,
    57,
    57,
    33,
    33,
    33,
    65,
    65,
    58,
    57,
    34,
    57,
    57,
    33,
    34,
    65,
    34,
    34,
    57,
    57,
    33,
    34,
    57,
    57,
    33,
    58,
    65,
    33,
    34,
    57,
    57,
    33,
    66,
    65,
    65,
    65,
    34,
    65,
    33,
    33,
    34,
    65,
    34,
    65,
    34,
    65,
    33,
    66,
    65,
    34,
    65,
    65,
    65,
    65,
    33,
    33,
    65,
    65,
    34,
    65,
    65,
    50,
    65,
    65,
    58,
    65,
    65,
    66,
    65,
    65,
    34,
    17,
    50,
    17,
    58,
    17,
    66,
    17,
    66,
    65,
    65,
    66,
    57,
    57,
    57,
    65,
    33,
    66,
    57,
    57,
    65,
    33,
    58,
    65,
    57,
    33,
    58,
    65,
    57,
    57,
    33,
    34,
    66,
    66,
    65,
    33,
    33,
    57,
    57,
    65,
    66,
    56,
    65,
    65,
    65,
    65,
    65,
    66,
    65,
    65,
    56,
    65,
    65,
    57,
    65,
    66,
    65,
    65,
    57,
    65,
    65,
    162,
    65,
    57,
    58,
    161,
    65,
    128,
    152,
    65,
    128,
    152,
    65,
    128,
    152,
    65,
    128,
    152,
    65,
    128,
    152,
    65,
    128,
    152,
    65,
    152,
    65,
    152,
    66,
    65,
    65,
    152,
    66,
    65,
    66,
    65,
    66,
    67,
    82,
    83,
    66,
    56,
    66,
    16,
    66,
    16,
    66,
    16,
    66,
    16,
    65,
    16,
    34,
    65,
    16,
    50,
    65,
    16,
    58,
    65,
    16,
    66,
    65,
    16,
    128,
    66,
    128,
    66,
    65,
    56,
    128,
    66,
    16,
    128,
    66,
    65,
    16,
    34,
    65,
    16,
    34,
    65,
    16,
    34,
    65,
    16,
    34,
    65,
    16,
    50,
    65,
    16,
    58,
    65,
    16,
    65,
    16,
    65,
    65,
    16,
    33,
    65,
    16,
    33,
    65,
    16,
    33,
    65,
    16,
    33,
    65,
    16,
    49,
    65,
    16,
    57,
    66,
    65,
    16,
    66,
    65,
    16,
    128,
    66,
    65,
    16,
    128,
    34,
    65,
    16,
    50,
    65,
    16,
    58,
    65,
    16,
    65,
    16,
    65,
    65,
    16,
    33,
    65,
    16,
    49,
    65,
    16,
    57,
    34,
    65,
    16,
    50,
    65,
    16,
    65,
    33,
    16,
    65,
    49,
    16,
    66,
    16,
    16,
    65,
    82,
    16,
    16,
    65,
    58,
    128,
    24,
    66,
    128,
    32,
    66,
    34,
    65,
    34,
    65,
    34,
    65,
    66,
    65,
    65,
    65,
    66,
    65,
    65,
    65,
    128,
    65,
    65,
    65,
    16,
    56,
    24,
    24,
    32,
    24,
    24);
    MAST::Ops.WHO<%codes> := nqp::hash('no_op', 0,
    'const_i8', 1,
    'const_i16', 2,
    'const_i32', 3,
    'const_i64', 4,
    'const_n32', 5,
    'const_n64', 6,
    'const_s', 7,
    'set', 8,
    'extend_u8', 9,
    'extend_u16', 10,
    'extend_u32', 11,
    'extend_i8', 12,
    'extend_i16', 13,
    'extend_i32', 14,
    'trunc_u8', 15,
    'trunc_u16', 16,
    'trunc_u32', 17,
    'trunc_i8', 18,
    'trunc_i16', 19,
    'trunc_i32', 20,
    'extend_n32', 21,
    'trunc_n32', 22,
    'goto', 23,
    'if_i', 24,
    'unless_i', 25,
    'if_n', 26,
    'unless_n', 27,
    'if_s', 28,
    'unless_s', 29,
    'if_s0', 30,
    'unless_s0', 31,
    'if_o', 32,
    'unless_o', 33,
    'jumplist', 34,
    'getlex', 35,
    'bindlex', 36,
    'getlex_ni', 37,
    'getlex_nn', 38,
    'getlex_ns', 39,
    'getlex_no', 40,
    'bindlex_ni', 41,
    'bindlex_nn', 42,
    'bindlex_ns', 43,
    'bindlex_no', 44,
    'getlex_ng', 45,
    'bindlex_ng', 46,
    'getdynlex', 47,
    'binddynlex', 48,
    'setlexvalue', 49,
    'lexprimspec', 50,
    'return_i', 51,
    'return_n', 52,
    'return_s', 53,
    'return_o', 54,
    'return', 55,
    'eq_i', 56,
    'ne_i', 57,
    'lt_i', 58,
    'le_i', 59,
    'gt_i', 60,
    'ge_i', 61,
    'cmp_i', 62,
    'add_i', 63,
    'sub_i', 64,
    'mul_i', 65,
    'div_i', 66,
    'div_u', 67,
    'mod_i', 68,
    'mod_u', 69,
    'neg_i', 70,
    'abs_i', 71,
    'inc_i', 72,
    'inc_u', 73,
    'dec_i', 74,
    'dec_u', 75,
    'band_i', 76,
    'bor_i', 77,
    'bxor_i', 78,
    'bnot_i', 79,
    'blshift_i', 80,
    'brshift_i', 81,
    'pow_i', 82,
    'not_i', 83,
    'gcd_i', 84,
    'lcm_i', 85,
    'eq_n', 86,
    'ne_n', 87,
    'lt_n', 88,
    'le_n', 89,
    'gt_n', 90,
    'ge_n', 91,
    'cmp_n', 92,
    'add_n', 93,
    'sub_n', 94,
    'mul_n', 95,
    'div_n', 96,
    'mod_n', 97,
    'neg_n', 98,
    'abs_n', 99,
    'pow_n', 100,
    'ceil_n', 101,
    'floor_n', 102,
    'sin_n', 103,
    'asin_n', 104,
    'cos_n', 105,
    'acos_n', 106,
    'tan_n', 107,
    'atan_n', 108,
    'atan2_n', 109,
    'sec_n', 110,
    'asec_n', 111,
    'sinh_n', 112,
    'cosh_n', 113,
    'tanh_n', 114,
    'sech_n', 115,
    'sqrt_n', 116,
    'log_n', 117,
    'exp_n', 118,
    'coerce_in', 119,
    'coerce_ni', 120,
    'coerce_is', 121,
    'coerce_ns', 122,
    'coerce_si', 123,
    'coerce_sn', 124,
    'smrt_numify', 125,
    'smrt_strify', 126,
    'prepargs', 127,
    'arg_i', 128,
    'arg_n', 129,
    'arg_s', 130,
    'arg_o', 131,
    'argconst_i', 132,
    'argconst_n', 133,
    'argconst_s', 134,
    'invoke_v', 135,
    'invoke_i', 136,
    'invoke_n', 137,
    'invoke_s', 138,
    'invoke_o', 139,
    'checkarity', 140,
    'param_rp_i', 141,
    'param_rp_n', 142,
    'param_rp_s', 143,
    'param_rp_o', 144,
    'param_op_i', 145,
    'param_op_n', 146,
    'param_op_s', 147,
    'param_op_o', 148,
    'param_rn_i', 149,
    'param_rn_n', 150,
    'param_rn_s', 151,
    'param_rn_o', 152,
    'param_on_i', 153,
    'param_on_n', 154,
    'param_on_s', 155,
    'param_on_o', 156,
    'param_sp', 157,
    'param_sn', 158,
    'getcode', 159,
    'caller', 160,
    'capturelex', 161,
    'takeclosure', 162,
    'exception', 163,
    'bindexmessage', 164,
    'bindexpayload', 165,
    'bindexcategory', 166,
    'getexmessage', 167,
    'getexpayload', 168,
    'getexcategory', 169,
    'throwdyn', 170,
    'throwlex', 171,
    'throwlexotic', 172,
    'throwcatdyn', 173,
    'throwcatlex', 174,
    'throwcatlexotic', 175,
    'die', 176,
    'rethrow', 177,
    'resume', 178,
    'takehandlerresult', 179,
    'DEPRECATED_33', 180,
    'DEPRECATED_34', 181,
    'backtracestrings', 182,
    'usecapture', 183,
    'savecapture', 184,
    'captureposelems', 185,
    'captureposarg', 186,
    'captureposarg_i', 187,
    'captureposarg_n', 188,
    'captureposarg_s', 189,
    'captureposprimspec', 190,
    'captureexistsnamed', 191,
    'capturehasnameds', 192,
    'invokewithcapture', 193,
    'multicacheadd', 194,
    'multicachefind', 195,
    'null_s', 196,
    'isnull_s', 197,
    'eq_s', 198,
    'ne_s', 199,
    'gt_s', 200,
    'ge_s', 201,
    'lt_s', 202,
    'le_s', 203,
    'cmp_s', 204,
    'eqat_s', 205,
    'eqatic_s', 206,
    'haveat_s', 207,
    'concat_s', 208,
    'repeat_s', 209,
    'substr_s', 210,
    'index_s', 211,
    'graphs_s', 212,
    'codes_s', 213,
    'getcp_s', 214,
    'indexcp_s', 215,
    'uc', 216,
    'lc', 217,
    'tc', 218,
    'split', 219,
    'join', 220,
    'getcpbyname', 221,
    'indexat', 222,
    'indexnat', 223,
    'unipropcode', 224,
    'unipvalcode', 225,
    'hasuniprop', 226,
    'hasunipropc', 227,
    'chars', 228,
    'chr', 229,
    'ordfirst', 230,
    'ordat', 231,
    'rindexfrom', 232,
    'escape', 233,
    'flip', 234,
    'setbuffersize_fh', 235,
    'iscclass', 236,
    'findcclass', 237,
    'findnotcclass', 238,
    'nfafromstatelist', 239,
    'nfarunproto', 240,
    'nfarunalt', 241,
    'radix', 242,
    'encode', 243,
    'decode', 244,
    'istrue_s', 245,
    'isfalse_s', 246,
    'null', 247,
    'isnull', 248,
    'ifnonnull', 249,
    'findmeth', 250,
    'findmeth_s', 251,
    'can', 252,
    'can_s', 253,
    'create', 254,
    'clone', 255,
    'isconcrete', 256,
    'rebless', 257,
    'istype', 258,
    'objprimspec', 259,
    'gethow', 260,
    'getwhat', 261,
    'getwho', 262,
    'setwho', 263,
    'reprname', 264,
    'getwhere', 265,
    'eqaddr', 266,
    'bindattr_i', 267,
    'bindattr_n', 268,
    'bindattr_s', 269,
    'bindattr_o', 270,
    'bindattrs_i', 271,
    'bindattrs_n', 272,
    'bindattrs_s', 273,
    'bindattrs_o', 274,
    'getattr_i', 275,
    'getattr_n', 276,
    'getattr_s', 277,
    'getattr_o', 278,
    'getattrs_i', 279,
    'getattrs_n', 280,
    'getattrs_s', 281,
    'getattrs_o', 282,
    'attrinited', 283,
    'box_i', 284,
    'box_n', 285,
    'box_s', 286,
    'unbox_i', 287,
    'unbox_n', 288,
    'unbox_s', 289,
    'atpos_i', 290,
    'atpos_n', 291,
    'atpos_s', 292,
    'atpos_o', 293,
    'bindpos_i', 294,
    'bindpos_n', 295,
    'bindpos_s', 296,
    'bindpos_o', 297,
    'push_i', 298,
    'push_n', 299,
    'push_s', 300,
    'push_o', 301,
    'pop_i', 302,
    'pop_n', 303,
    'pop_s', 304,
    'pop_o', 305,
    'shift_i', 306,
    'shift_n', 307,
    'shift_s', 308,
    'shift_o', 309,
    'unshift_i', 310,
    'unshift_n', 311,
    'unshift_s', 312,
    'unshift_o', 313,
    'splice', 314,
    'setelemspos', 315,
    'existspos', 316,
    'atkey_i', 317,
    'atkey_n', 318,
    'atkey_s', 319,
    'atkey_o', 320,
    'bindkey_i', 321,
    'bindkey_n', 322,
    'bindkey_s', 323,
    'bindkey_o', 324,
    'existskey', 325,
    'deletekey', 326,
    'elems', 327,
    'knowhow', 328,
    'knowhowattr', 329,
    'newtype', 330,
    'composetype', 331,
    'setmethcache', 332,
    'setmethcacheauth', 333,
    'settypecache', 334,
    'settypecheckmode', 335,
    'setboolspec', 336,
    'istrue', 337,
    'isfalse', 338,
    'bootint', 339,
    'bootnum', 340,
    'bootstr', 341,
    'bootarray', 342,
    'bootintarray', 343,
    'bootnumarray', 344,
    'bootstrarray', 345,
    'boothash', 346,
    'isint', 347,
    'isnum', 348,
    'isstr', 349,
    'islist', 350,
    'ishash', 351,
    'sethllconfig', 352,
    'hllboxtype_i', 353,
    'hllboxtype_n', 354,
    'hllboxtype_s', 355,
    'hlllist', 356,
    'hllhash', 357,
    'getcomp', 358,
    'bindcomp', 359,
    'getcurhllsym', 360,
    'bindcurhllsym', 361,
    'gethllsym', 362,
    'bindhllsym', 363,
    'settypehll', 364,
    'settypehllrole', 365,
    'hllize', 366,
    'hllizefor', 367,
    'usecompileehllconfig', 368,
    'usecompilerhllconfig', 369,
    'iter', 370,
    'iterkey_s', 371,
    'iterval', 372,
    'getcodename', 373,
    'iscoderef', 374,
    'getcodeobj', 375,
    'setcodeobj', 376,
    'setcodename', 377,
    'forceouterctx', 378,
    'setinvokespec', 379,
    'isinvokable', 380,
    'freshcoderef', 381,
    'markcodestatic', 382,
    'markcodestub', 383,
    'getstaticcode', 384,
    'getcodecuid', 385,
    'setdispatcher', 386,
    'takedispatcher', 387,
    'assign', 388,
    'assignunchecked', 389,
    'iscont', 390,
    'decont', 391,
    'setcontspec', 392,
    'sha1', 393,
    'createsc', 394,
    'scsetobj', 395,
    'scsetcode', 396,
    'scgetobj', 397,
    'scgethandle', 398,
    'scgetobjidx', 399,
    'scsetdesc', 400,
    'scobjcount', 401,
    'setobjsc', 402,
    'getobjsc', 403,
    'serialize', 404,
    'deserialize', 405,
    'wval', 406,
    'wval_wide', 407,
    'scwbdisable', 408,
    'scwbenable', 409,
    'pushcompsc', 410,
    'popcompsc', 411,
    'scgetdesc', 412,
    'loadbytecode', 413,
    'masttofile', 414,
    'masttocu', 415,
    'iscompunit', 416,
    'compunitmainline', 417,
    'compunitcodes', 418,
    'ctx', 419,
    'ctxouter', 420,
    'ctxcaller', 421,
    'ctxlexpad', 422,
    'curcode', 423,
    'callercode', 424,
    'add_I', 425,
    'sub_I', 426,
    'mul_I', 427,
    'div_I', 428,
    'mod_I', 429,
    'neg_I', 430,
    'abs_I', 431,
    'cmp_I', 432,
    'eq_I', 433,
    'ne_I', 434,
    'lt_I', 435,
    'le_I', 436,
    'gt_I', 437,
    'ge_I', 438,
    'bor_I', 439,
    'bxor_I', 440,
    'band_I', 441,
    'bnot_I', 442,
    'blshift_I', 443,
    'brshift_I', 444,
    'pow_I', 445,
    'gcd_I', 446,
    'lcm_I', 447,
    'expmod_I', 448,
    'isprime_I', 449,
    'rand_I', 450,
    'coerce_In', 451,
    'coerce_Is', 452,
    'coerce_nI', 453,
    'coerce_sI', 454,
    'isbig_I', 455,
    'bool_I', 456,
    'base_I', 457,
    'radix_I', 458,
    'div_In', 459,
    'copy_f', 460,
    'append_f', 461,
    'rename_f', 462,
    'delete_f', 463,
    'chmod_f', 464,
    'exists_f', 465,
    'mkdir', 466,
    'rmdir', 467,
    'open_dir', 468,
    'read_dir', 469,
    'close_dir', 470,
    'open_fh', 471,
    'close_fh', 472,
    'DEPRECATED_23', 473,
    'DEPRECATED_27', 474,
    'DEPRECATED_28', 475,
    'DEPRECATED_18', 476,
    'seek_fh', 477,
    'lock_fh', 478,
    'unlock_fh', 479,
    'sync_fh', 480,
    'trunc_fh', 481,
    'eof_fh', 482,
    'getstdin', 483,
    'getstdout', 484,
    'getstderr', 485,
    'connect_sk', 486,
    'socket', 487,
    'bind_sk', 488,
    'DEPRECATED_24', 489,
    'accept_sk', 490,
    'decodetocodes', 491,
    'encodefromcodes', 492,
    'DEPRECATED_17', 493,
    'print', 494,
    'say', 495,
    'DEPRECATED_22', 496,
    'tell_fh', 497,
    'stat', 498,
    'tryfindmeth', 499,
    'tryfindmeth_s', 500,
    'chdir', 501,
    'srand', 502,
    'rand_i', 503,
    'rand_n', 504,
    'time_i', 505,
    'sleep', 506,
    'newthread', 507,
    'threadjoin', 508,
    'time_n', 509,
    'exit', 510,
    'DEPRECATED_30', 511,
    'cwd', 512,
    'clargs', 513,
    'getenvhash', 514,
    'loadlib', 515,
    'freelib', 516,
    'findsym', 517,
    'dropsym', 518,
    'loadext', 519,
    'backendconfig', 520,
    'getlexouter', 521,
    'getlexrel', 522,
    'getlexreldyn', 523,
    'getlexrelcaller', 524,
    'getlexcaller', 525,
    'bitand_s', 526,
    'bitor_s', 527,
    'bitxor_s', 528,
    'isnanorinf', 529,
    'inf', 530,
    'neginf', 531,
    'nan', 532,
    'getpid', 533,
    'DEPRECATED_29', 534,
    'filereadable', 535,
    'filewritable', 536,
    'fileexecutable', 537,
    'DEPRECATED_19', 538,
    'capturenamedshash', 539,
    'read_fhb', 540,
    'write_fhb', 541,
    'replace', 542,
    'newexception', 543,
    'permit', 544,
    'backtrace', 545,
    'symlink', 546,
    'link', 547,
    'gethostname', 548,
    'exreturnafterunwind', 549,
    'DEPRECATED_13', 550,
    'continuationreset', 551,
    'continuationcontrol', 552,
    'continuationinvoke', 553,
    'randscale_n', 554,
    'uniisblock', 555,
    'assertparamcheck', 556,
    'hintfor', 557,
    'paramnamesused', 558,
    'getuniname', 559,
    'getuniprop_int', 560,
    'getuniprop_bool', 561,
    'getuniprop_str', 562,
    'matchuniprop', 563,
    'nativecallbuild', 564,
    'nativecallinvoke', 565,
    'nativecallrefresh', 566,
    'threadrun', 567,
    'threadid', 568,
    'threadyield', 569,
    'currentthread', 570,
    'lock', 571,
    'unlock', 572,
    'semacquire', 573,
    'semtryacquire', 574,
    'semrelease', 575,
    'getlockcondvar', 576,
    'condwait', 577,
    'condsignalone', 578,
    'condsignalall', 579,
    'queuepoll', 580,
    'setmultispec', 581,
    'ctxouterskipthunks', 582,
    'ctxcallerskipthunks', 583,
    'timer', 584,
    'cancel', 585,
    'signal', 586,
    'watchfile', 587,
    'asyncconnect', 588,
    'asynclisten', 589,
    'DEPRECATED_14', 590,
    'asyncwritebytes', 591,
    'DEPRECATED_16', 592,
    'asyncreadbytes', 593,
    'getlexstatic_o', 594,
    'getlexperinvtype_o', 595,
    'execname', 596,
    'const_i64_16', 597,
    'const_i64_32', 598,
    'isnonnull', 599,
    'param_rn2_i', 600,
    'param_rn2_n', 601,
    'param_rn2_s', 602,
    'param_rn2_o', 603,
    'param_on2_i', 604,
    'param_on2_n', 605,
    'param_on2_s', 606,
    'param_on2_o', 607,
    'osrpoint', 608,
    'nativecallcast', 609,
    'spawnprocasync', 610,
    'killprocasync', 611,
    'startprofile', 612,
    'endprofile', 613,
    'objectid', 614,
    'settypefinalize', 615,
    'force_gc', 616,
    'nativecallglobal', 617,
    'DEPRECATED_32', 618,
    'setparameterizer', 619,
    'parameterizetype', 620,
    'typeparameterized', 621,
    'typeparameters', 622,
    'typeparameterat', 623,
    'readlink', 624,
    'lstat', 625,
    'iscont_i', 626,
    'iscont_n', 627,
    'iscont_s', 628,
    'assign_i', 629,
    'assign_n', 630,
    'assign_s', 631,
    'decont_i', 632,
    'decont_n', 633,
    'decont_s', 634,
    'getrusage', 635,
    'threadlockcount', 636,
    'DEPRECATED_4', 637,
    'getlexref_i', 638,
    'getlexref_n', 639,
    'getlexref_s', 640,
    'getlexref_ni', 641,
    'getlexref_nn', 642,
    'getlexref_ns', 643,
    'atposref_i', 644,
    'atposref_n', 645,
    'atposref_s', 646,
    'getattrref_i', 647,
    'getattrref_n', 648,
    'getattrref_s', 649,
    'getattrsref_i', 650,
    'getattrsref_n', 651,
    'getattrsref_s', 652,
    'nativecallsizeof', 653,
    'encodenorm', 654,
    'normalizecodes', 655,
    'strfromcodes', 656,
    'strtocodes', 657,
    'getcodelocation', 658,
    'eqatim_s', 659,
    'ordbaseat', 660,
    'neverrepossess', 661,
    'scdisclaim', 662,
    'DEPRECATED_31', 663,
    'atpos2d_i', 664,
    'atpos2d_n', 665,
    'atpos2d_s', 666,
    'atpos2d_o', 667,
    'atpos3d_i', 668,
    'atpos3d_n', 669,
    'atpos3d_s', 670,
    'atpos3d_o', 671,
    'atposnd_i', 672,
    'atposnd_n', 673,
    'atposnd_s', 674,
    'atposnd_o', 675,
    'bindpos2d_i', 676,
    'bindpos2d_n', 677,
    'bindpos2d_s', 678,
    'bindpos2d_o', 679,
    'bindpos3d_i', 680,
    'bindpos3d_n', 681,
    'bindpos3d_s', 682,
    'bindpos3d_o', 683,
    'bindposnd_i', 684,
    'bindposnd_n', 685,
    'bindposnd_s', 686,
    'bindposnd_o', 687,
    'dimensions', 688,
    'setdimensions', 689,
    'numdimensions', 690,
    'ctxcode', 691,
    'isrwcont', 692,
    'fc', 693,
    'DEPRECATED_25', 694,
    'DEPRECATED_21', 695,
    'encoderep', 696,
    'istty_fh', 697,
    'multidimref_i', 698,
    'multidimref_n', 699,
    'multidimref_s', 700,
    'fileno_fh', 701,
    'asyncudp', 702,
    'DEPRECATED_15', 703,
    'asyncwritebytesto', 704,
    'objprimbits', 705,
    'objprimunsigned', 706,
    'DEPRECATED_5', 707,
    'DEPRECATED_6', 708,
    'DEPRECATED_7', 709,
    'DEPRECATED_8', 710,
    'getlexref_i32', 711,
    'getlexref_i16', 712,
    'getlexref_i8', 713,
    'getlexref_n32', 714,
    'box_u', 715,
    'unbox_u', 716,
    'coerce_iu', 717,
    'coerce_ui', 718,
    'coerce_nu', 719,
    'coerce_un', 720,
    'decont_u', 721,
    'DEPRECATED_9', 722,
    'DEPRECATED_10', 723,
    'DEPRECATED_11', 724,
    'DEPRECATED_12', 725,
    'getlexref_u', 726,
    'getlexref_u32', 727,
    'getlexref_u16', 728,
    'getlexref_u8', 729,
    'param_rp_u', 730,
    'param_op_u', 731,
    'param_rn_u', 732,
    'param_on_u', 733,
    'param_rn2_u', 734,
    'param_on2_u', 735,
    'stat_time', 736,
    'lstat_time', 737,
    'setdebugtypename', 738,
    'loadbytecodebuffer', 739,
    'loadbytecodefh', 740,
    'throwpayloadlex', 741,
    'throwpayloadlexcaller', 742,
    'lastexpayload', 743,
    'cancelnotify', 744,
    'decoderconfigure', 745,
    'decodersetlineseps', 746,
    'decoderaddbytes', 747,
    'decodertakechars', 748,
    'decodertakeallchars', 749,
    'decodertakeavailablechars', 750,
    'decodertakeline', 751,
    'decoderbytesavailable', 752,
    'decodertakebytes', 753,
    'decoderempty', 754,
    'indexingoptimized', 755,
    'captureinnerlex', 756,
    'unicmp_s', 757,
    'setdispatcherfor', 758,
    'getstrfromname', 759,
    'indexic_s', 760,
    'getport_sk', 761,
    'cpucores', 762,
    'eqaticim_s', 763,
    'indexicim_s', 764,
    'decodertakecharseof', 765,
    'indexim_s', 766,
    'cas_o', 767,
    'cas_i', 768,
    'atomicinc_i', 769,
    'atomicdec_i', 770,
    'atomicadd_i', 771,
    'atomicload_o', 772,
    'atomicload_i', 773,
    'atomicstore_o', 774,
    'atomicstore_i', 775,
    'barrierfull', 776,
    'coveragecontrol', 777,
    'nativeinvoke_v', 778,
    'nativeinvoke_i', 779,
    'nativeinvoke_n', 780,
    'nativeinvoke_s', 781,
    'nativeinvoke_o', 782,
    'getarg_i', 783,
    'getarg_n', 784,
    'getarg_s', 785,
    'getarg_o', 786,
    'coerce_II', 787,
    'encoderepconf', 788,
    'encodeconf', 789,
    'decodeconf', 790,
    'decoderepconf', 791,
    'getppid', 792,
    'getsignals', 793,
    'slice', 794,
    'speshreg', 795,
    'speshresolve', 796,
    'speshguardtype', 797,
    'speshguardconcrete', 798,
    'speshguardtypeobj', 799,
    'speshguardobj', 800,
    'speshguardgetattr', 801,
    'atomicbindattr_o', 802,
    'casattr_o', 803,
    'atkey_u', 804,
    'coerce_us', 805,
    'sp_guard', 806,
    'sp_guardconc', 807,
    'sp_guardtype', 808,
    'sp_guardsf', 809,
    'sp_guardsfouter', 810,
    'sp_guardobj', 811,
    'sp_guardjustconc', 812,
    'sp_guardjusttype', 813,
    'sp_rebless', 814,
    'sp_resolvecode', 815,
    'sp_decont', 816,
    'sp_getlex_o', 817,
    'sp_getlex_ins', 818,
    'sp_getlex_no', 819,
    'sp_getarg_o', 820,
    'sp_getarg_i', 821,
    'sp_getarg_n', 822,
    'sp_getarg_s', 823,
    'sp_fastinvoke_v', 824,
    'sp_fastinvoke_i', 825,
    'sp_fastinvoke_n', 826,
    'sp_fastinvoke_s', 827,
    'sp_fastinvoke_o', 828,
    'sp_paramnamesused', 829,
    'sp_getspeshslot', 830,
    'sp_findmeth', 831,
    'sp_fastcreate', 832,
    'sp_get_o', 833,
    'sp_get_i64', 834,
    'sp_get_i32', 835,
    'sp_get_i16', 836,
    'sp_get_i8', 837,
    'sp_get_n', 838,
    'sp_get_s', 839,
    'sp_bind_o', 840,
    'sp_bind_i64', 841,
    'sp_bind_i32', 842,
    'sp_bind_i16', 843,
    'sp_bind_i8', 844,
    'sp_bind_n', 845,
    'sp_bind_s', 846,
    'sp_p6oget_o', 847,
    'sp_p6ogetvt_o', 848,
    'sp_p6ogetvc_o', 849,
    'sp_p6oget_i', 850,
    'sp_p6oget_n', 851,
    'sp_p6oget_s', 852,
    'sp_p6obind_o', 853,
    'sp_p6obind_i', 854,
    'sp_p6obind_n', 855,
    'sp_p6obind_s', 856,
    'sp_deref_get_i64', 857,
    'sp_deref_get_n', 858,
    'sp_deref_bind_i64', 859,
    'sp_deref_bind_n', 860,
    'sp_getlexvia_o', 861,
    'sp_getlexvia_ins', 862,
    'sp_getstringfrom', 863,
    'sp_getwvalfrom', 864,
    'sp_jit_enter', 865,
    'sp_boolify_iter', 866,
    'sp_boolify_iter_arr', 867,
    'sp_boolify_iter_hash', 868,
    'sp_cas_o', 869,
    'sp_atomicload_o', 870,
    'sp_atomicstore_o', 871,
    'prof_enter', 872,
    'prof_enterspesh', 873,
    'prof_enterinline', 874,
    'prof_enternative', 875,
    'prof_exit', 876,
    'prof_allocated', 877,
    'ctw_check', 878,
    'coverage_log', 879,
    'breakpoint', 880);
    MAST::Ops.WHO<@names> := nqp::list_s('no_op',
    'const_i8',
    'const_i16',
    'const_i32',
    'const_i64',
    'const_n32',
    'const_n64',
    'const_s',
    'set',
    'extend_u8',
    'extend_u16',
    'extend_u32',
    'extend_i8',
    'extend_i16',
    'extend_i32',
    'trunc_u8',
    'trunc_u16',
    'trunc_u32',
    'trunc_i8',
    'trunc_i16',
    'trunc_i32',
    'extend_n32',
    'trunc_n32',
    'goto',
    'if_i',
    'unless_i',
    'if_n',
    'unless_n',
    'if_s',
    'unless_s',
    'if_s0',
    'unless_s0',
    'if_o',
    'unless_o',
    'jumplist',
    'getlex',
    'bindlex',
    'getlex_ni',
    'getlex_nn',
    'getlex_ns',
    'getlex_no',
    'bindlex_ni',
    'bindlex_nn',
    'bindlex_ns',
    'bindlex_no',
    'getlex_ng',
    'bindlex_ng',
    'getdynlex',
    'binddynlex',
    'setlexvalue',
    'lexprimspec',
    'return_i',
    'return_n',
    'return_s',
    'return_o',
    'return',
    'eq_i',
    'ne_i',
    'lt_i',
    'le_i',
    'gt_i',
    'ge_i',
    'cmp_i',
    'add_i',
    'sub_i',
    'mul_i',
    'div_i',
    'div_u',
    'mod_i',
    'mod_u',
    'neg_i',
    'abs_i',
    'inc_i',
    'inc_u',
    'dec_i',
    'dec_u',
    'band_i',
    'bor_i',
    'bxor_i',
    'bnot_i',
    'blshift_i',
    'brshift_i',
    'pow_i',
    'not_i',
    'gcd_i',
    'lcm_i',
    'eq_n',
    'ne_n',
    'lt_n',
    'le_n',
    'gt_n',
    'ge_n',
    'cmp_n',
    'add_n',
    'sub_n',
    'mul_n',
    'div_n',
    'mod_n',
    'neg_n',
    'abs_n',
    'pow_n',
    'ceil_n',
    'floor_n',
    'sin_n',
    'asin_n',
    'cos_n',
    'acos_n',
    'tan_n',
    'atan_n',
    'atan2_n',
    'sec_n',
    'asec_n',
    'sinh_n',
    'cosh_n',
    'tanh_n',
    'sech_n',
    'sqrt_n',
    'log_n',
    'exp_n',
    'coerce_in',
    'coerce_ni',
    'coerce_is',
    'coerce_ns',
    'coerce_si',
    'coerce_sn',
    'smrt_numify',
    'smrt_strify',
    'prepargs',
    'arg_i',
    'arg_n',
    'arg_s',
    'arg_o',
    'argconst_i',
    'argconst_n',
    'argconst_s',
    'invoke_v',
    'invoke_i',
    'invoke_n',
    'invoke_s',
    'invoke_o',
    'checkarity',
    'param_rp_i',
    'param_rp_n',
    'param_rp_s',
    'param_rp_o',
    'param_op_i',
    'param_op_n',
    'param_op_s',
    'param_op_o',
    'param_rn_i',
    'param_rn_n',
    'param_rn_s',
    'param_rn_o',
    'param_on_i',
    'param_on_n',
    'param_on_s',
    'param_on_o',
    'param_sp',
    'param_sn',
    'getcode',
    'caller',
    'capturelex',
    'takeclosure',
    'exception',
    'bindexmessage',
    'bindexpayload',
    'bindexcategory',
    'getexmessage',
    'getexpayload',
    'getexcategory',
    'throwdyn',
    'throwlex',
    'throwlexotic',
    'throwcatdyn',
    'throwcatlex',
    'throwcatlexotic',
    'die',
    'rethrow',
    'resume',
    'takehandlerresult',
    'DEPRECATED_33',
    'DEPRECATED_34',
    'backtracestrings',
    'usecapture',
    'savecapture',
    'captureposelems',
    'captureposarg',
    'captureposarg_i',
    'captureposarg_n',
    'captureposarg_s',
    'captureposprimspec',
    'captureexistsnamed',
    'capturehasnameds',
    'invokewithcapture',
    'multicacheadd',
    'multicachefind',
    'null_s',
    'isnull_s',
    'eq_s',
    'ne_s',
    'gt_s',
    'ge_s',
    'lt_s',
    'le_s',
    'cmp_s',
    'eqat_s',
    'eqatic_s',
    'haveat_s',
    'concat_s',
    'repeat_s',
    'substr_s',
    'index_s',
    'graphs_s',
    'codes_s',
    'getcp_s',
    'indexcp_s',
    'uc',
    'lc',
    'tc',
    'split',
    'join',
    'getcpbyname',
    'indexat',
    'indexnat',
    'unipropcode',
    'unipvalcode',
    'hasuniprop',
    'hasunipropc',
    'chars',
    'chr',
    'ordfirst',
    'ordat',
    'rindexfrom',
    'escape',
    'flip',
    'setbuffersize_fh',
    'iscclass',
    'findcclass',
    'findnotcclass',
    'nfafromstatelist',
    'nfarunproto',
    'nfarunalt',
    'radix',
    'encode',
    'decode',
    'istrue_s',
    'isfalse_s',
    'null',
    'isnull',
    'ifnonnull',
    'findmeth',
    'findmeth_s',
    'can',
    'can_s',
    'create',
    'clone',
    'isconcrete',
    'rebless',
    'istype',
    'objprimspec',
    'gethow',
    'getwhat',
    'getwho',
    'setwho',
    'reprname',
    'getwhere',
    'eqaddr',
    'bindattr_i',
    'bindattr_n',
    'bindattr_s',
    'bindattr_o',
    'bindattrs_i',
    'bindattrs_n',
    'bindattrs_s',
    'bindattrs_o',
    'getattr_i',
    'getattr_n',
    'getattr_s',
    'getattr_o',
    'getattrs_i',
    'getattrs_n',
    'getattrs_s',
    'getattrs_o',
    'attrinited',
    'box_i',
    'box_n',
    'box_s',
    'unbox_i',
    'unbox_n',
    'unbox_s',
    'atpos_i',
    'atpos_n',
    'atpos_s',
    'atpos_o',
    'bindpos_i',
    'bindpos_n',
    'bindpos_s',
    'bindpos_o',
    'push_i',
    'push_n',
    'push_s',
    'push_o',
    'pop_i',
    'pop_n',
    'pop_s',
    'pop_o',
    'shift_i',
    'shift_n',
    'shift_s',
    'shift_o',
    'unshift_i',
    'unshift_n',
    'unshift_s',
    'unshift_o',
    'splice',
    'setelemspos',
    'existspos',
    'atkey_i',
    'atkey_n',
    'atkey_s',
    'atkey_o',
    'bindkey_i',
    'bindkey_n',
    'bindkey_s',
    'bindkey_o',
    'existskey',
    'deletekey',
    'elems',
    'knowhow',
    'knowhowattr',
    'newtype',
    'composetype',
    'setmethcache',
    'setmethcacheauth',
    'settypecache',
    'settypecheckmode',
    'setboolspec',
    'istrue',
    'isfalse',
    'bootint',
    'bootnum',
    'bootstr',
    'bootarray',
    'bootintarray',
    'bootnumarray',
    'bootstrarray',
    'boothash',
    'isint',
    'isnum',
    'isstr',
    'islist',
    'ishash',
    'sethllconfig',
    'hllboxtype_i',
    'hllboxtype_n',
    'hllboxtype_s',
    'hlllist',
    'hllhash',
    'getcomp',
    'bindcomp',
    'getcurhllsym',
    'bindcurhllsym',
    'gethllsym',
    'bindhllsym',
    'settypehll',
    'settypehllrole',
    'hllize',
    'hllizefor',
    'usecompileehllconfig',
    'usecompilerhllconfig',
    'iter',
    'iterkey_s',
    'iterval',
    'getcodename',
    'iscoderef',
    'getcodeobj',
    'setcodeobj',
    'setcodename',
    'forceouterctx',
    'setinvokespec',
    'isinvokable',
    'freshcoderef',
    'markcodestatic',
    'markcodestub',
    'getstaticcode',
    'getcodecuid',
    'setdispatcher',
    'takedispatcher',
    'assign',
    'assignunchecked',
    'iscont',
    'decont',
    'setcontspec',
    'sha1',
    'createsc',
    'scsetobj',
    'scsetcode',
    'scgetobj',
    'scgethandle',
    'scgetobjidx',
    'scsetdesc',
    'scobjcount',
    'setobjsc',
    'getobjsc',
    'serialize',
    'deserialize',
    'wval',
    'wval_wide',
    'scwbdisable',
    'scwbenable',
    'pushcompsc',
    'popcompsc',
    'scgetdesc',
    'loadbytecode',
    'masttofile',
    'masttocu',
    'iscompunit',
    'compunitmainline',
    'compunitcodes',
    'ctx',
    'ctxouter',
    'ctxcaller',
    'ctxlexpad',
    'curcode',
    'callercode',
    'add_I',
    'sub_I',
    'mul_I',
    'div_I',
    'mod_I',
    'neg_I',
    'abs_I',
    'cmp_I',
    'eq_I',
    'ne_I',
    'lt_I',
    'le_I',
    'gt_I',
    'ge_I',
    'bor_I',
    'bxor_I',
    'band_I',
    'bnot_I',
    'blshift_I',
    'brshift_I',
    'pow_I',
    'gcd_I',
    'lcm_I',
    'expmod_I',
    'isprime_I',
    'rand_I',
    'coerce_In',
    'coerce_Is',
    'coerce_nI',
    'coerce_sI',
    'isbig_I',
    'bool_I',
    'base_I',
    'radix_I',
    'div_In',
    'copy_f',
    'append_f',
    'rename_f',
    'delete_f',
    'chmod_f',
    'exists_f',
    'mkdir',
    'rmdir',
    'open_dir',
    'read_dir',
    'close_dir',
    'open_fh',
    'close_fh',
    'DEPRECATED_23',
    'DEPRECATED_27',
    'DEPRECATED_28',
    'DEPRECATED_18',
    'seek_fh',
    'lock_fh',
    'unlock_fh',
    'sync_fh',
    'trunc_fh',
    'eof_fh',
    'getstdin',
    'getstdout',
    'getstderr',
    'connect_sk',
    'socket',
    'bind_sk',
    'DEPRECATED_24',
    'accept_sk',
    'decodetocodes',
    'encodefromcodes',
    'DEPRECATED_17',
    'print',
    'say',
    'DEPRECATED_22',
    'tell_fh',
    'stat',
    'tryfindmeth',
    'tryfindmeth_s',
    'chdir',
    'srand',
    'rand_i',
    'rand_n',
    'time_i',
    'sleep',
    'newthread',
    'threadjoin',
    'time_n',
    'exit',
    'DEPRECATED_30',
    'cwd',
    'clargs',
    'getenvhash',
    'loadlib',
    'freelib',
    'findsym',
    'dropsym',
    'loadext',
    'backendconfig',
    'getlexouter',
    'getlexrel',
    'getlexreldyn',
    'getlexrelcaller',
    'getlexcaller',
    'bitand_s',
    'bitor_s',
    'bitxor_s',
    'isnanorinf',
    'inf',
    'neginf',
    'nan',
    'getpid',
    'DEPRECATED_29',
    'filereadable',
    'filewritable',
    'fileexecutable',
    'DEPRECATED_19',
    'capturenamedshash',
    'read_fhb',
    'write_fhb',
    'replace',
    'newexception',
    'permit',
    'backtrace',
    'symlink',
    'link',
    'gethostname',
    'exreturnafterunwind',
    'DEPRECATED_13',
    'continuationreset',
    'continuationcontrol',
    'continuationinvoke',
    'randscale_n',
    'uniisblock',
    'assertparamcheck',
    'hintfor',
    'paramnamesused',
    'getuniname',
    'getuniprop_int',
    'getuniprop_bool',
    'getuniprop_str',
    'matchuniprop',
    'nativecallbuild',
    'nativecallinvoke',
    'nativecallrefresh',
    'threadrun',
    'threadid',
    'threadyield',
    'currentthread',
    'lock',
    'unlock',
    'semacquire',
    'semtryacquire',
    'semrelease',
    'getlockcondvar',
    'condwait',
    'condsignalone',
    'condsignalall',
    'queuepoll',
    'setmultispec',
    'ctxouterskipthunks',
    'ctxcallerskipthunks',
    'timer',
    'cancel',
    'signal',
    'watchfile',
    'asyncconnect',
    'asynclisten',
    'DEPRECATED_14',
    'asyncwritebytes',
    'DEPRECATED_16',
    'asyncreadbytes',
    'getlexstatic_o',
    'getlexperinvtype_o',
    'execname',
    'const_i64_16',
    'const_i64_32',
    'isnonnull',
    'param_rn2_i',
    'param_rn2_n',
    'param_rn2_s',
    'param_rn2_o',
    'param_on2_i',
    'param_on2_n',
    'param_on2_s',
    'param_on2_o',
    'osrpoint',
    'nativecallcast',
    'spawnprocasync',
    'killprocasync',
    'startprofile',
    'endprofile',
    'objectid',
    'settypefinalize',
    'force_gc',
    'nativecallglobal',
    'DEPRECATED_32',
    'setparameterizer',
    'parameterizetype',
    'typeparameterized',
    'typeparameters',
    'typeparameterat',
    'readlink',
    'lstat',
    'iscont_i',
    'iscont_n',
    'iscont_s',
    'assign_i',
    'assign_n',
    'assign_s',
    'decont_i',
    'decont_n',
    'decont_s',
    'getrusage',
    'threadlockcount',
    'DEPRECATED_4',
    'getlexref_i',
    'getlexref_n',
    'getlexref_s',
    'getlexref_ni',
    'getlexref_nn',
    'getlexref_ns',
    'atposref_i',
    'atposref_n',
    'atposref_s',
    'getattrref_i',
    'getattrref_n',
    'getattrref_s',
    'getattrsref_i',
    'getattrsref_n',
    'getattrsref_s',
    'nativecallsizeof',
    'encodenorm',
    'normalizecodes',
    'strfromcodes',
    'strtocodes',
    'getcodelocation',
    'eqatim_s',
    'ordbaseat',
    'neverrepossess',
    'scdisclaim',
    'DEPRECATED_31',
    'atpos2d_i',
    'atpos2d_n',
    'atpos2d_s',
    'atpos2d_o',
    'atpos3d_i',
    'atpos3d_n',
    'atpos3d_s',
    'atpos3d_o',
    'atposnd_i',
    'atposnd_n',
    'atposnd_s',
    'atposnd_o',
    'bindpos2d_i',
    'bindpos2d_n',
    'bindpos2d_s',
    'bindpos2d_o',
    'bindpos3d_i',
    'bindpos3d_n',
    'bindpos3d_s',
    'bindpos3d_o',
    'bindposnd_i',
    'bindposnd_n',
    'bindposnd_s',
    'bindposnd_o',
    'dimensions',
    'setdimensions',
    'numdimensions',
    'ctxcode',
    'isrwcont',
    'fc',
    'DEPRECATED_25',
    'DEPRECATED_21',
    'encoderep',
    'istty_fh',
    'multidimref_i',
    'multidimref_n',
    'multidimref_s',
    'fileno_fh',
    'asyncudp',
    'DEPRECATED_15',
    'asyncwritebytesto',
    'objprimbits',
    'objprimunsigned',
    'DEPRECATED_5',
    'DEPRECATED_6',
    'DEPRECATED_7',
    'DEPRECATED_8',
    'getlexref_i32',
    'getlexref_i16',
    'getlexref_i8',
    'getlexref_n32',
    'box_u',
    'unbox_u',
    'coerce_iu',
    'coerce_ui',
    'coerce_nu',
    'coerce_un',
    'decont_u',
    'DEPRECATED_9',
    'DEPRECATED_10',
    'DEPRECATED_11',
    'DEPRECATED_12',
    'getlexref_u',
    'getlexref_u32',
    'getlexref_u16',
    'getlexref_u8',
    'param_rp_u',
    'param_op_u',
    'param_rn_u',
    'param_on_u',
    'param_rn2_u',
    'param_on2_u',
    'stat_time',
    'lstat_time',
    'setdebugtypename',
    'loadbytecodebuffer',
    'loadbytecodefh',
    'throwpayloadlex',
    'throwpayloadlexcaller',
    'lastexpayload',
    'cancelnotify',
    'decoderconfigure',
    'decodersetlineseps',
    'decoderaddbytes',
    'decodertakechars',
    'decodertakeallchars',
    'decodertakeavailablechars',
    'decodertakeline',
    'decoderbytesavailable',
    'decodertakebytes',
    'decoderempty',
    'indexingoptimized',
    'captureinnerlex',
    'unicmp_s',
    'setdispatcherfor',
    'getstrfromname',
    'indexic_s',
    'getport_sk',
    'cpucores',
    'eqaticim_s',
    'indexicim_s',
    'decodertakecharseof',
    'indexim_s',
    'cas_o',
    'cas_i',
    'atomicinc_i',
    'atomicdec_i',
    'atomicadd_i',
    'atomicload_o',
    'atomicload_i',
    'atomicstore_o',
    'atomicstore_i',
    'barrierfull',
    'coveragecontrol',
    'nativeinvoke_v',
    'nativeinvoke_i',
    'nativeinvoke_n',
    'nativeinvoke_s',
    'nativeinvoke_o',
    'getarg_i',
    'getarg_n',
    'getarg_s',
    'getarg_o',
    'coerce_II',
    'encoderepconf',
    'encodeconf',
    'decodeconf',
    'decoderepconf',
    'getppid',
    'getsignals',
    'slice',
    'speshreg',
    'speshresolve',
    'speshguardtype',
    'speshguardconcrete',
    'speshguardtypeobj',
    'speshguardobj',
    'speshguardgetattr',
    'atomicbindattr_o',
    'casattr_o',
    'atkey_u',
    'coerce_us',
    'sp_guard',
    'sp_guardconc',
    'sp_guardtype',
    'sp_guardsf',
    'sp_guardsfouter',
    'sp_guardobj',
    'sp_guardjustconc',
    'sp_guardjusttype',
    'sp_rebless',
    'sp_resolvecode',
    'sp_decont',
    'sp_getlex_o',
    'sp_getlex_ins',
    'sp_getlex_no',
    'sp_getarg_o',
    'sp_getarg_i',
    'sp_getarg_n',
    'sp_getarg_s',
    'sp_fastinvoke_v',
    'sp_fastinvoke_i',
    'sp_fastinvoke_n',
    'sp_fastinvoke_s',
    'sp_fastinvoke_o',
    'sp_paramnamesused',
    'sp_getspeshslot',
    'sp_findmeth',
    'sp_fastcreate',
    'sp_get_o',
    'sp_get_i64',
    'sp_get_i32',
    'sp_get_i16',
    'sp_get_i8',
    'sp_get_n',
    'sp_get_s',
    'sp_bind_o',
    'sp_bind_i64',
    'sp_bind_i32',
    'sp_bind_i16',
    'sp_bind_i8',
    'sp_bind_n',
    'sp_bind_s',
    'sp_p6oget_o',
    'sp_p6ogetvt_o',
    'sp_p6ogetvc_o',
    'sp_p6oget_i',
    'sp_p6oget_n',
    'sp_p6oget_s',
    'sp_p6obind_o',
    'sp_p6obind_i',
    'sp_p6obind_n',
    'sp_p6obind_s',
    'sp_deref_get_i64',
    'sp_deref_get_n',
    'sp_deref_bind_i64',
    'sp_deref_bind_n',
    'sp_getlexvia_o',
    'sp_getlexvia_ins',
    'sp_getstringfrom',
    'sp_getwvalfrom',
    'sp_jit_enter',
    'sp_boolify_iter',
    'sp_boolify_iter_arr',
    'sp_boolify_iter_hash',
    'sp_cas_o',
    'sp_atomicload_o',
    'sp_atomicstore_o',
    'prof_enter',
    'prof_enterspesh',
    'prof_enterinline',
    'prof_enternative',
    'prof_exit',
    'prof_allocated',
    'ctw_check',
    'coverage_log',
    'breakpoint');
}
